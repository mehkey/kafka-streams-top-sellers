[
  {
    "name": "org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "platformTransactionManagerCustomizers",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "clientConnectorCustomizer",
        "parameterTypes": [
          "org.springframework.http.client.reactive.ClientHttpConnector"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "stringHttpMessageConverter",
        "parameterTypes": [
          "org.springframework.core.env.Environment"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.WebProperties",
          "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties",
          "org.springframework.beans.factory.ListableBeanFactory",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "requestContextFilter",
        "parameterTypes": [ ]
      },
      {
        "name": "defaultViewResolver",
        "parameterTypes": [ ]
      },
      {
        "name": "viewResolver",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Netty",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setH2cMaxContentLength",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "getIdleTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "isValidateHeaders",
        "parameterTypes": [ ]
      },
      {
        "name": "setInitialBufferSize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "getH2cMaxContentLength",
        "parameterTypes": [ ]
      },
      {
        "name": "setValidateHeaders",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setMaxKeepAliveRequests",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "getMaxChunkSize",
        "parameterTypes": [ ]
      },
      {
        "name": "setIdleTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setConnectionTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "getConnectionTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "setMaxChunkSize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "getMaxKeepAliveRequests",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxInitialLineLength",
        "parameterTypes": [ ]
      },
      {
        "name": "setMaxInitialLineLength",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "getInitialBufferSize",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.integration.IntegrationAutoConfiguration$IntegrationConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "defaultPollerMetadata",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.integration.IntegrationProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.info.ProjectInfoProperties$Build",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setEncoding",
        "parameterTypes": [
          "java.nio.charset.Charset"
        ]
      },
      {
        "name": "setLocation",
        "parameterTypes": [
          "org.springframework.core.io.Resource"
        ]
      },
      {
        "name": "getLocation",
        "parameterTypes": [ ]
      },
      {
        "name": "getEncoding",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.integration.routingslip.ExpressionEvaluatingRoutingSlipRouteStrategy$RequestAndReply",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.cloud.stream.config.BinderProperties",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setInheritEnvironment",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getEnvironment",
        "parameterTypes": [ ]
      },
      {
        "name": "setEnvironment",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "getType",
        "parameterTypes": [ ]
      },
      {
        "name": "isInheritEnvironment",
        "parameterTypes": [ ]
      },
      {
        "name": "isDefaultCandidate",
        "parameterTypes": [ ]
      },
      {
        "name": "setDefaultCandidate",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.context.LifecycleProperties",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setTimeoutPerShutdownPhase",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "getTimeoutPerShutdownPhase",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxHttpFormPostSize",
        "parameterTypes": [ ]
      },
      {
        "name": "getRelaxedQueryChars",
        "parameterTypes": [ ]
      },
      {
        "name": "setKeepAliveTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "getThreads",
        "parameterTypes": [ ]
      },
      {
        "name": "setMaxHttpFormPostSize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "setBasedir",
        "parameterTypes": [
          "java.io.File"
        ]
      },
      {
        "name": "getRedirectContextRoot",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxSwallowSize",
        "parameterTypes": [ ]
      },
      {
        "name": "isRejectIllegalHeader",
        "parameterTypes": [ ]
      },
      {
        "name": "setRejectIllegalHeader",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getUriEncoding",
        "parameterTypes": [ ]
      },
      {
        "name": "setBackgroundProcessorDelay",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setProcessorCache",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getBackgroundProcessorDelay",
        "parameterTypes": [ ]
      },
      {
        "name": "setMaxKeepAliveRequests",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getKeepAliveTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "setRelaxedPathChars",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "getAcceptCount",
        "parameterTypes": [ ]
      },
      {
        "name": "setConnectionTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setRelaxedQueryChars",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "getMaxKeepAliveRequests",
        "parameterTypes": [ ]
      },
      {
        "name": "getResource",
        "parameterTypes": [ ]
      },
      {
        "name": "setMaxSwallowSize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "getMbeanregistry",
        "parameterTypes": [ ]
      },
      {
        "name": "setRedirectContextRoot",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "isUseRelativeRedirects",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxConnections",
        "parameterTypes": [ ]
      },
      {
        "name": "getAdditionalTldSkipPatterns",
        "parameterTypes": [ ]
      },
      {
        "name": "getRemoteip",
        "parameterTypes": [ ]
      },
      {
        "name": "getBasedir",
        "parameterTypes": [ ]
      },
      {
        "name": "getAccesslog",
        "parameterTypes": [ ]
      },
      {
        "name": "setAcceptCount",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setUriEncoding",
        "parameterTypes": [
          "java.nio.charset.Charset"
        ]
      },
      {
        "name": "setAdditionalTldSkipPatterns",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "getConnectionTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "getProcessorCache",
        "parameterTypes": [ ]
      },
      {
        "name": "getRelaxedPathChars",
        "parameterTypes": [ ]
      },
      {
        "name": "setUseRelativeRedirects",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setMaxConnections",
        "parameterTypes": [
          "int"
        ]
      }
    ]
  },
  {
    "name": "org.apache.kafka.clients.consumer.RoundRobinAssignor",
    "allPublicConstructors": true
  },
  {
    "name": "org.apache.kafka.clients.consumer.CooperativeStickyAssignor",
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Ssl",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getTrustStoreLocation",
        "parameterTypes": [ ]
      },
      {
        "name": "getKeyStorePassword",
        "parameterTypes": [ ]
      },
      {
        "name": "getProtocol",
        "parameterTypes": [ ]
      },
      {
        "name": "setTrustStoreType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getKeyPassword",
        "parameterTypes": [ ]
      },
      {
        "name": "getTrustStorePassword",
        "parameterTypes": [ ]
      },
      {
        "name": "setProtocol",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTrustStorePassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getKeyStoreLocation",
        "parameterTypes": [ ]
      },
      {
        "name": "setTrustStoreCertificates",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setKeyStoreCertificateChain",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setKeyPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getKeyStoreKey",
        "parameterTypes": [ ]
      },
      {
        "name": "setKeyStorePassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTrustStoreLocation",
        "parameterTypes": [
          "org.springframework.core.io.Resource"
        ]
      },
      {
        "name": "setKeyStoreType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getTrustStoreCertificates",
        "parameterTypes": [ ]
      },
      {
        "name": "setKeyStoreLocation",
        "parameterTypes": [
          "org.springframework.core.io.Resource"
        ]
      },
      {
        "name": "setKeyStoreKey",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getTrustStoreType",
        "parameterTypes": [ ]
      },
      {
        "name": "getKeyStoreType",
        "parameterTypes": [ ]
      },
      {
        "name": "getKeyStoreCertificateChain",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.stream.config.BindingProperties",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getErrorHandlerDefinition",
        "parameterTypes": [ ]
      },
      {
        "name": "setConsumer",
        "parameterTypes": [
          "org.springframework.cloud.stream.binder.ConsumerProperties"
        ]
      },
      {
        "name": "getConsumer",
        "parameterTypes": [ ]
      },
      {
        "name": "setGroup",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getGroup",
        "parameterTypes": [ ]
      },
      {
        "name": "setErrorHandlerDefinition",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getProducer",
        "parameterTypes": [ ]
      },
      {
        "name": "setProducer",
        "parameterTypes": [
          "org.springframework.cloud.stream.binder.ProducerProperties"
        ]
      },
      {
        "name": "setContentType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getBinder",
        "parameterTypes": [ ]
      },
      {
        "name": "setDestination",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getContentType",
        "parameterTypes": [ ]
      },
      {
        "name": "setBinder",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getDestination",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.apache.kafka.common.utils.ImplicitLinkedHashCollection$Element",
    "allDeclaredConstructors": true,
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.stream.binder.kafka.properties.KafkaBinderConfigurationProperties",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.kafka.KafkaProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.r2dbc.ConnectionFactoryBeanCreationFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.integration.IntegrationAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "integrationGlobalProperties",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.integration.IntegrationProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.config.DelegatingApplicationContextInitializer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.apache.kafka.common.message.CreateTopicsRequestData$CreatableTopic",
    "allDeclaredConstructors": true
  },
  {
    "name": "com.fasterxml.jackson.databind.PropertyNamingStrategies",
    "fields": [
      {
        "name": "KEBAB_CASE"
      },
      {
        "name": "UPPER_SNAKE_CASE"
      },
      {
        "name": "LOWER_CAMEL_CASE"
      },
      {
        "name": "UPPER_CAMEL_CASE"
      },
      {
        "name": "LOWER_DOT_CASE"
      },
      {
        "name": "LOWER_CASE"
      },
      {
        "name": "SNAKE_CASE"
      }
    ]
  },
  {
    "name": "java.util.function.Supplier",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.cloud.stream.binder.kafka.config.ExtendedBindingHandlerMappingsProviderConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "kafkaExtendedPropertiesDefaultMappingsProvider",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.kafka.core.DefaultKafkaProducerFactory",
    "allDeclaredConstructors": true,
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.servlet.MultipartProperties"
        ]
      },
      {
        "name": "multipartConfigElement",
        "parameterTypes": [ ]
      },
      {
        "name": "multipartResolver",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.properties.IncompatibleConfigurationFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.apache.kafka.common.serialization.IntegerSerializer",
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializerDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.kafka.support.serializer.DelegatingByTopicDeserializer",
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.cloud.stream.binder.kafka.properties.KafkaBindingProperties",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setProducer",
        "parameterTypes": [
          "org.springframework.cloud.stream.binder.kafka.properties.KafkaProducerProperties"
        ]
      },
      {
        "name": "getConsumer",
        "parameterTypes": [ ]
      },
      {
        "name": "getProducer",
        "parameterTypes": [ ]
      },
      {
        "name": "setConsumer",
        "parameterTypes": [
          "org.springframework.cloud.stream.binder.kafka.properties.KafkaConsumerProperties"
        ]
      }
    ]
  },
  {
    "name": "org.apache.kafka.clients.producer.RoundRobinPartitioner",
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$NettyWebServerFactoryCustomizerConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "nettyWebServerFactoryCustomizer",
        "parameterTypes": [
          "org.springframework.core.env.Environment",
          "org.springframework.boot.autoconfigure.web.ServerProperties"
        ]
      }
    ]
  },
  {
    "name": "org.apache.kafka.common.serialization.Serdes$ByteArraySerde",
    "allPublicConstructors": true
  },
  {
    "name": "org.apache.kafka.common.serialization.ByteBufferSerializer",
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.integration.kafka.inbound.KafkaMessageDrivenChannelAdapter",
    "methods": [
      {
        "name": "pause",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.integration.IntegrationProperties$Management",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setDefaultLoggingEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "isDefaultLoggingEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "setObservationPatterns",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "getObservationPatterns",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "applicationAvailability",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.config.ConfigDataProperties",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.util.List",
          "org.springframework.boot.context.config.ConfigDataProperties$Activate"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "standardJacksonObjectMapperBuilderCustomizer",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.jackson.JacksonProperties",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jooq.NoDslContextBeanFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.session.JdbcIndexedSessionRepositoryDependsOnDatabaseInitializationDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.stream.binder.AbstractExtendedBindingProperties",
    "methods": [
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "setBindings",
        "parameterTypes": [
          "java.util.Map"
        ]
      }
    ]
  },
  {
    "name": "com.fasterxml.jackson.databind.ser.std.FileSerializer",
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "isCache",
        "parameterTypes": [ ]
      },
      {
        "name": "isEnableSpringElCompiler",
        "parameterTypes": [ ]
      },
      {
        "name": "getExcludedViewNames",
        "parameterTypes": [ ]
      },
      {
        "name": "setPrefix",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "setEnableSpringElCompiler",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setCache",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "isCheckTemplate",
        "parameterTypes": [ ]
      },
      {
        "name": "getServlet",
        "parameterTypes": [ ]
      },
      {
        "name": "setMode",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setExcludedViewNames",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "setViewNames",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "setCheckTemplate",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setCheckTemplateLocation",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setTemplateResolverOrder",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "isCheckTemplateLocation",
        "parameterTypes": [ ]
      },
      {
        "name": "setRenderHiddenMarkersBeforeCheckboxes",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "isRenderHiddenMarkersBeforeCheckboxes",
        "parameterTypes": [ ]
      },
      {
        "name": "getSuffix",
        "parameterTypes": [ ]
      },
      {
        "name": "setEncoding",
        "parameterTypes": [
          "java.nio.charset.Charset"
        ]
      },
      {
        "name": "getPrefix",
        "parameterTypes": [ ]
      },
      {
        "name": "getEncoding",
        "parameterTypes": [ ]
      },
      {
        "name": "setSuffix",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getMode",
        "parameterTypes": [ ]
      },
      {
        "name": "getTemplateResolverOrder",
        "parameterTypes": [ ]
      },
      {
        "name": "getReactive",
        "parameterTypes": [ ]
      },
      {
        "name": "getViewNames",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.kafka.KafkaProperties",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getConsumer",
        "parameterTypes": [ ]
      },
      {
        "name": "getSecurity",
        "parameterTypes": [ ]
      },
      {
        "name": "getJaas",
        "parameterTypes": [ ]
      },
      {
        "name": "getProducer",
        "parameterTypes": [ ]
      },
      {
        "name": "getBootstrapServers",
        "parameterTypes": [ ]
      },
      {
        "name": "getAdmin",
        "parameterTypes": [ ]
      },
      {
        "name": "getRetry",
        "parameterTypes": [ ]
      },
      {
        "name": "setBootstrapServers",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "getSsl",
        "parameterTypes": [ ]
      },
      {
        "name": "getClientId",
        "parameterTypes": [ ]
      },
      {
        "name": "getTemplate",
        "parameterTypes": [ ]
      },
      {
        "name": "getListener",
        "parameterTypes": [ ]
      },
      {
        "name": "setClientId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getProperties",
        "parameterTypes": [ ]
      },
      {
        "name": "getStreams",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "com.fasterxml.jackson.databind.ser.std.StdJdkSerializers$AtomicLongSerializer",
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Undertow$Accesslog",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setDir",
        "parameterTypes": [
          "java.io.File"
        ]
      },
      {
        "name": "getDir",
        "parameterTypes": [ ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "isRotate",
        "parameterTypes": [ ]
      },
      {
        "name": "getPrefix",
        "parameterTypes": [ ]
      },
      {
        "name": "setRotate",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setPrefix",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPattern",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSuffix",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getSuffix",
        "parameterTypes": [ ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "getPattern",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.BeanNotOfRequiredTypeFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "ch.qos.logback.classic.LoggerContext"
  },
  {
    "name": "org.springframework.kafka.core.ConsumerFactory",
    "allDeclaredConstructors": true,
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.integration.config.GlobalChannelInterceptorInitializer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.http.codec.support.DefaultClientCodecConfigurer",
    "condition": {
      "typeReachable": "org.springframework.http.codec.CodecConfigurerFactory"
    },
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.function.client.WebClientAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "webClientBuilder",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Jetty$Accesslog",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setRetentionPeriod",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getIgnorePaths",
        "parameterTypes": [ ]
      },
      {
        "name": "getCustomFormat",
        "parameterTypes": [ ]
      },
      {
        "name": "setAppend",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getRetentionPeriod",
        "parameterTypes": [ ]
      },
      {
        "name": "setCustomFormat",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "setFilename",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFormat",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.ServerProperties$Jetty$Accesslog$FORMAT"
        ]
      },
      {
        "name": "setFileDateFormat",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isAppend",
        "parameterTypes": [ ]
      },
      {
        "name": "getFormat",
        "parameterTypes": [ ]
      },
      {
        "name": "getFilename",
        "parameterTypes": [ ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setIgnorePaths",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "getFileDateFormat",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.integration.support.SmartLifecycleRoleController",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.integration.json.JsonPathUtils",
    "condition": {
      "typeReachable": "com.jayway.jsonpath.JsonPath"
    },
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.integration.config.GlobalChannelInterceptorProcessor",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.freemarker.FreeMarkerTemplateAvailabilityProvider",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.env.EnvironmentPostProcessorApplicationListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.ValidationExceptionFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.apache.kafka.common.serialization.ByteBufferDeserializer",
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.kafka.support.serializer.DelegatingSerializer",
    "allPublicConstructors": true
  },
  {
    "name": "org.apache.kafka.common.serialization.LongSerializer",
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.codec.CodecsAutoConfiguration$DefaultCodecsConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "defaultCodecCustomizer",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.codec.CodecProperties"
        ]
      }
    ]
  },
  {
    "name": "org.apache.kafka.common.serialization.Serdes$LongSerde",
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.kafka.support.serializer.ErrorHandlingDeserializer",
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.FailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.ClearCachesApplicationListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.info.ProjectInfoProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.config.ConfigDataLocationResolver",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.apache.kafka.common.serialization.Serdes$StringSerde",
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.kafka.support.serializer.DelegatingDeserializer",
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.logging.log4j2.Log4J2LoggingSystem$Factory",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.stream.binder.AbstractBinder",
    "fields": [
      {
        "name": "consumerBindingRetryTemplates"
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskExecutionProperties$Pool",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setMaxSize",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setCoreSize",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setKeepAlive",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setQueueCapacity",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "isAllowCoreThreadTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "getCoreSize",
        "parameterTypes": [ ]
      },
      {
        "name": "getQueueCapacity",
        "parameterTypes": [ ]
      },
      {
        "name": "setAllowCoreThreadTimeout",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getKeepAlive",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxSize",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "jacksonObjectMapperBuilder",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext",
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.stream.binder.kafka.streams.KTableBinderConfiguration$$SpringCGLIB$$0",
    "allDeclaredConstructors": true,
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.integration.dsl.context.StandardIntegrationFlowContext",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateAvailabilityProvider",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.kafka.core.ProducerFactory",
    "allDeclaredConstructors": true,
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "java.util.function.Function",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.cloud.stream.binder.kafka.streams.KTableBinderConfiguration$$SpringCGLIB$$2",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Undertow$Threads",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getWorker",
        "parameterTypes": [ ]
      },
      {
        "name": "setWorker",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "getIo",
        "parameterTypes": [ ]
      },
      {
        "name": "setIo",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.stream.binder.kafka.streams.KTableBinderConfiguration$$SpringCGLIB$$1",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.apache.kafka.clients.producer.internals.DefaultPartitioner",
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.logging.logback.LogbackLoggingSystem$Factory",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.PatternParseFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.web.context.ServerPortInfoApplicationContextInitializer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.stream.config.ContentTypeConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "configurableCompositeMessageConverter",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider",
          "java.util.List",
          "org.springframework.cloud.function.json.JsonMapper"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.codec.CodecProperties",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setMaxInMemorySize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "getMaxInMemorySize",
        "parameterTypes": [ ]
      },
      {
        "name": "isLogRequestDetails",
        "parameterTypes": [ ]
      },
      {
        "name": "setLogRequestDetails",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.integration.context.IntegrationContextUtils",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.config.BeanExpressionContext",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties",
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "defaultTemplateResolver",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.integration.IntegrationProperties$RSocket",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getServer",
        "parameterTypes": [ ]
      },
      {
        "name": "getClient",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.diagnostics.analyzer.NoSuchBeanDefinitionFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.env.YamlPropertySourceLoader",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.logging.logback.WhitespaceThrowableProxyConverter",
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.kafka.KafkaAnnotationDrivenConfiguration$EnableKafkaConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.orm.jpa.JpaDatabaseInitializerDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$Contentnegotiation",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setParameterName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isFavorParameter",
        "parameterTypes": [ ]
      },
      {
        "name": "getParameterName",
        "parameterTypes": [ ]
      },
      {
        "name": "setFavorParameter",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getMediaTypes",
        "parameterTypes": [ ]
      },
      {
        "name": "setMediaTypes",
        "parameterTypes": [
          "java.util.Map"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.sql.init.dependency.AnnotationDependsOnDatabaseInitializationDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.config.ConfigDataProperties$Activate",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.cloud.CloudPlatform",
          "java.lang.String[]"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.aop.AopAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.stream.config.BindingServiceConfiguration",
    "fields": [
      {
        "name": "binderFactoryListeners"
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "globalErrorChannelCustomizer",
        "parameterTypes": [ ]
      },
      {
        "name": "bindingService",
        "parameterTypes": [
          "org.springframework.cloud.stream.config.BindingServiceProperties",
          "org.springframework.cloud.stream.binder.BinderFactory",
          "org.springframework.scheduling.TaskScheduler",
          "com.fasterxml.jackson.databind.ObjectMapper"
        ]
      },
      {
        "name": "BindingHandlerAdvise",
        "parameterTypes": [
          "org.springframework.cloud.stream.config.BindingHandlerAdvise$MappingsProvider[]"
        ]
      },
      {
        "name": "bindingsLifecycleController",
        "parameterTypes": [
          "java.util.List",
          "java.util.List"
        ]
      },
      {
        "name": "inputBindingLifecycle",
        "parameterTypes": [
          "org.springframework.cloud.stream.binding.BindingService",
          "java.util.Map"
        ]
      },
      {
        "name": "dynamicDestinationsBindable",
        "parameterTypes": [ ]
      },
      {
        "name": "outputBindingLifecycle",
        "parameterTypes": [
          "org.springframework.cloud.stream.binding.BindingService",
          "java.util.Map"
        ]
      },
      {
        "name": "appListener",
        "parameterTypes": [
          "org.springframework.cloud.stream.config.SpringIntegrationProperties"
        ]
      },
      {
        "name": "binderChildContextInitializer",
        "parameterTypes": [ ]
      },
      {
        "name": "binderFactory",
        "parameterTypes": [
          "org.springframework.cloud.stream.binder.BinderTypeRegistry",
          "org.springframework.cloud.stream.config.BindingServiceProperties",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.cloud.stream.binder.BinderChildContextInitializer"
        ]
      },
      {
        "name": "contextStartAfterRefreshListener",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "defaultLifecycleProcessor",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.context.LifecycleProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Consumer",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setBootstrapServers",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "getFetchMaxWait",
        "parameterTypes": [ ]
      },
      {
        "name": "getKeyDeserializer",
        "parameterTypes": [ ]
      },
      {
        "name": "getGroupId",
        "parameterTypes": [ ]
      },
      {
        "name": "getHeartbeatInterval",
        "parameterTypes": [ ]
      },
      {
        "name": "setMaxPollRecords",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setKeyDeserializer",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "setClientId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getAutoOffsetReset",
        "parameterTypes": [ ]
      },
      {
        "name": "setHeartbeatInterval",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setValueDeserializer",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "setAutoOffsetReset",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getClientId",
        "parameterTypes": [ ]
      },
      {
        "name": "getBootstrapServers",
        "parameterTypes": [ ]
      },
      {
        "name": "getEnableAutoCommit",
        "parameterTypes": [ ]
      },
      {
        "name": "getFetchMinSize",
        "parameterTypes": [ ]
      },
      {
        "name": "getValueDeserializer",
        "parameterTypes": [ ]
      },
      {
        "name": "getProperties",
        "parameterTypes": [ ]
      },
      {
        "name": "setGroupId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getAutoCommitInterval",
        "parameterTypes": [ ]
      },
      {
        "name": "setAutoCommitInterval",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setFetchMinSize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "setEnableAutoCommit",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setIsolationLevel",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.kafka.KafkaProperties$IsolationLevel"
        ]
      },
      {
        "name": "setFetchMaxWait",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "getIsolationLevel",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxPollRecords",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.SharedMetadataReaderFactoryContextInitializer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.builder.ParentContextCloserApplicationListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "servletWebServerFactoryCustomizer",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.ServerProperties",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "tomcatServletWebServerFactoryCustomizer",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.ServerProperties"
        ]
      }
    ]
  },
  {
    "name": "org.apache.kafka.streams.processor.internals.assignment.HighAvailabilityTaskAssignor",
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.SpringApplication",
    "methods": [
      {
        "name": "getApplicationStartup",
        "parameterTypes": [ ]
      },
      {
        "name": "setAddCommandLineProperties",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setEnvironmentPrefix",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getInitializers",
        "parameterTypes": [ ]
      },
      {
        "name": "setBannerMode",
        "parameterTypes": [
          "org.springframework.boot.Banner$Mode"
        ]
      },
      {
        "name": "setResourceLoader",
        "parameterTypes": [
          "org.springframework.core.io.ResourceLoader"
        ]
      },
      {
        "name": "getEnvironmentPrefix",
        "parameterTypes": [ ]
      },
      {
        "name": "setAllowBeanDefinitionOverriding",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setAddConversionService",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRegisterShutdownHook",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setSources",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setBeanNameGenerator",
        "parameterTypes": [
          "org.springframework.beans.factory.support.BeanNameGenerator"
        ]
      },
      {
        "name": "setMainApplicationClass",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "setHeadless",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setAllowCircularReferences",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getSources",
        "parameterTypes": [ ]
      },
      {
        "name": "setLogStartupInfo",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setInitializers",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "setBanner",
        "parameterTypes": [
          "org.springframework.boot.Banner"
        ]
      },
      {
        "name": "setDefaultProperties",
        "parameterTypes": [
          "java.util.Properties"
        ]
      },
      {
        "name": "getListeners",
        "parameterTypes": [ ]
      },
      {
        "name": "setWebApplicationType",
        "parameterTypes": [
          "org.springframework.boot.WebApplicationType"
        ]
      },
      {
        "name": "getAllSources",
        "parameterTypes": [ ]
      },
      {
        "name": "getMainApplicationClass",
        "parameterTypes": [ ]
      },
      {
        "name": "setApplicationStartup",
        "parameterTypes": [
          "org.springframework.core.metrics.ApplicationStartup"
        ]
      },
      {
        "name": "getAdditionalProfiles",
        "parameterTypes": [ ]
      },
      {
        "name": "getWebApplicationType",
        "parameterTypes": [ ]
      },
      {
        "name": "setLazyInitialization",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getResourceLoader",
        "parameterTypes": [ ]
      },
      {
        "name": "setApplicationContextFactory",
        "parameterTypes": [
          "org.springframework.boot.ApplicationContextFactory"
        ]
      },
      {
        "name": "setEnvironment",
        "parameterTypes": [
          "org.springframework.core.env.ConfigurableEnvironment"
        ]
      },
      {
        "name": "setListeners",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "setAdditionalProfiles",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      }
    ]
  },
  {
    "name": "org.apache.kafka.common.serialization.StringDeserializer",
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Reactive$Session",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "getCookie",
        "parameterTypes": [ ]
      },
      {
        "name": "getTimeout",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.server.Compression",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "getMinResponseSize",
        "parameterTypes": [ ]
      },
      {
        "name": "setMinResponseSize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "setExcludedUserAgents",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getMimeTypes",
        "parameterTypes": [ ]
      },
      {
        "name": "setMimeTypes",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "getExcludedUserAgents",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.BeanDefinitionOverrideFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.UnboundConfigurationPropertyFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.apache.kafka.common.serialization.Serdes$IntegerSerde",
    "allPublicConstructors": true
  },
  {
    "name": "org.apache.kafka.common.serialization.Serdes$ByteBufferSerde",
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "jacksonObjectMapper",
        "parameterTypes": [
          "org.springframework.http.converter.json.Jackson2ObjectMapperBuilder"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.kafka.support.serializer.DelegatingByTypeSerializer",
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.context.event.EventListenerMethodProcessor",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.rsocket.context.RSocketPortInfoApplicationContextInitializer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties$Reactive",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getFullModeViewNames",
        "parameterTypes": [ ]
      },
      {
        "name": "setChunkedModeViewNames",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "getMediaTypes",
        "parameterTypes": [ ]
      },
      {
        "name": "getChunkedModeViewNames",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxChunkSize",
        "parameterTypes": [ ]
      },
      {
        "name": "setMediaTypes",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setFullModeViewNames",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "setMaxChunkSize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.stream.binder.kafka.streams.KafkaStreamsJaasConfiguration",
    "allPublicMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "jaasInitializer",
        "parameterTypes": [
          "org.springframework.cloud.stream.binder.kafka.properties.KafkaBinderConfigurationProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Chain$Strategy$Content",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setPaths",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "getPaths",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.integration.dsl.context.IntegrationFlowBeanPostProcessor",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.integration.config.ConverterRegistrar$IntegrationConverterRegistration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.context.event.DefaultEventListenerFactory",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.function.context.config.KotlinLambdaToFunctionAutoConfiguration$$SpringCGLIB$$2",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.NoUniqueBeanDefinitionFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.function.context.config.KotlinLambdaToFunctionAutoConfiguration$$SpringCGLIB$$0",
    "allDeclaredConstructors": true,
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.servlet.server.Jsp",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setRegistered",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getInitParameters",
        "parameterTypes": [ ]
      },
      {
        "name": "getClassName",
        "parameterTypes": [ ]
      },
      {
        "name": "getRegistered",
        "parameterTypes": [ ]
      },
      {
        "name": "setClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setInitParameters",
        "parameterTypes": [
          "java.util.Map"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.function.context.config.KotlinLambdaToFunctionAutoConfiguration$$SpringCGLIB$$1",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.integration.config.IdempotentReceiverAutoProxyCreatorInitializer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.integration.handler.AbstractReplyProducingMessageHandler$RequestHandler",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.integration.support.management.ManageableLifecycle",
    "methods": [
      {
        "name": "stop",
        "parameterTypes": [ ]
      },
      {
        "name": "isRunning",
        "parameterTypes": [ ]
      },
      {
        "name": "start",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.integration.endpoint.AbstractEndpoint",
    "methods": [
      {
        "name": "start",
        "parameterTypes": [ ]
      },
      {
        "name": "isRunning",
        "parameterTypes": [ ]
      },
      {
        "name": "stop",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.kafka.support.serializer.JsonDeserializer",
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties$Shutdown",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setAwaitTermination",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setAwaitTerminationPeriod",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "isAwaitTermination",
        "parameterTypes": [ ]
      },
      {
        "name": "getAwaitTerminationPeriod",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.integration.handler.LoggingHandler",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.integration.handler.LoggingHandler$Level"
        ]
      }
    ]
  },
  {
    "name": "org.apache.kafka.common.serialization.Serdes$UUIDSerde",
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.kafka.support.serializer.ParseStringDeserializer",
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.context.config.ConfigTreeConfigDataLoader",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.FailureAnalysisReporter",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.function.context.config.ContextFunctionCatalogInitializer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.AutoConfigurationImportFilter",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.apache.kafka.clients.producer.UniformStickyPartitioner",
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.cloud.stream.binder.kafka.streams.KafkaStreamsBinderSupportAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "interactiveQueryServices",
        "parameterTypes": [
          "org.springframework.cloud.stream.binder.kafka.streams.KafkaStreamsRegistry",
          "org.springframework.cloud.stream.binder.kafka.streams.properties.KafkaStreamsBinderConfigurationProperties"
        ]
      },
      {
        "name": "keyValueSerdeResolver",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.cloud.stream.binder.kafka.streams.properties.KafkaStreamsBinderConfigurationProperties"
        ]
      },
      {
        "name": "streamsBuilderFactoryManager",
        "parameterTypes": [
          "org.springframework.cloud.stream.binder.kafka.streams.KafkaStreamsBindingInformationCatalogue",
          "org.springframework.cloud.stream.binder.kafka.streams.KafkaStreamsRegistry",
          "org.springframework.cloud.stream.binder.kafka.streams.KafkaStreamsBinderMetrics",
          "org.springframework.kafka.streams.KafkaStreamsMicrometerListener",
          "org.springframework.boot.autoconfigure.kafka.KafkaProperties"
        ]
      },
      {
        "name": "kTableBoundElementFactory",
        "parameterTypes": [
          "org.springframework.cloud.stream.config.BindingServiceProperties",
          "org.springframework.cloud.stream.binder.kafka.streams.EncodingDecodingBindAdviceHandler",
          "org.springframework.cloud.stream.binder.kafka.streams.KafkaStreamsBindingInformationCatalogue"
        ]
      },
      {
        "name": "encodingDecodingBindAdviceHandler",
        "parameterTypes": [ ]
      },
      {
        "name": "kafkaStreamsRegistry",
        "parameterTypes": [ ]
      },
      {
        "name": "kStreamBoundElementFactory",
        "parameterTypes": [
          "org.springframework.cloud.stream.config.BindingServiceProperties",
          "org.springframework.cloud.stream.binder.kafka.streams.KafkaStreamsBindingInformationCatalogue",
          "org.springframework.cloud.stream.binder.kafka.streams.EncodingDecodingBindAdviceHandler"
        ]
      },
      {
        "name": "streamConfigGlobalProperties",
        "parameterTypes": [
          "org.springframework.cloud.stream.binder.kafka.streams.properties.KafkaStreamsBinderConfigurationProperties",
          "org.springframework.kafka.config.KafkaStreamsConfiguration",
          "org.springframework.core.env.ConfigurableEnvironment",
          "org.springframework.cloud.stream.binder.kafka.streams.SendToDlqAndContinue"
        ]
      },
      {
        "name": "kafkaStreamsBindingInformationCatalogue",
        "parameterTypes": [ ]
      },
      {
        "name": "binderConfigurationProperties",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.kafka.KafkaProperties",
          "org.springframework.core.env.ConfigurableEnvironment",
          "org.springframework.cloud.stream.config.BindingServiceProperties",
          "org.springframework.context.ConfigurableApplicationContext"
        ]
      },
      {
        "name": "globalKTableBoundElementFactory",
        "parameterTypes": [
          "org.springframework.cloud.stream.config.BindingServiceProperties",
          "org.springframework.cloud.stream.binder.kafka.streams.EncodingDecodingBindAdviceHandler",
          "org.springframework.cloud.stream.binder.kafka.streams.KafkaStreamsBindingInformationCatalogue"
        ]
      },
      {
        "name": "messageConversionDelegate",
        "parameterTypes": [
          "org.springframework.messaging.converter.CompositeMessageConverter",
          "org.springframework.cloud.stream.binder.kafka.streams.SendToDlqAndContinue",
          "org.springframework.cloud.stream.binder.kafka.streams.KafkaStreamsBindingInformationCatalogue",
          "org.springframework.cloud.stream.binder.kafka.streams.properties.KafkaStreamsBinderConfigurationProperties"
        ]
      },
      {
        "name": "sendToDlqAndContinue",
        "parameterTypes": [ ]
      },
      {
        "name": "kafkaStreamsConfiguration",
        "parameterTypes": [
          "org.springframework.cloud.stream.binder.kafka.streams.properties.KafkaStreamsBinderConfigurationProperties",
          "org.springframework.core.env.Environment"
        ]
      }
    ]
  },
  {
    "name": "com.fasterxml.jackson.datatype.jdk8.Jdk8Module",
    "condition": {
      "typeReachable": "org.springframework.http.converter.json.Jackson2ObjectMapperBuilder"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "websocketServletWebServerCustomizer",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.stream.binder.kafka.streams.GlobalKTableBinderConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "provisioningProvider",
        "parameterTypes": [
          "org.springframework.cloud.stream.binder.kafka.streams.properties.KafkaStreamsBinderConfigurationProperties",
          "org.springframework.boot.autoconfigure.kafka.KafkaProperties",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "GlobalKTableBinder",
        "parameterTypes": [
          "org.springframework.cloud.stream.binder.kafka.streams.properties.KafkaStreamsBinderConfigurationProperties",
          "org.springframework.cloud.stream.binder.kafka.provisioning.KafkaTopicProvisioner",
          "org.springframework.cloud.stream.binder.kafka.streams.properties.KafkaStreamsExtendedBindingProperties",
          "org.springframework.cloud.stream.binder.kafka.streams.KafkaStreamsBindingInformationCatalogue",
          "java.util.Map",
          "org.springframework.cloud.stream.binder.kafka.streams.KafkaStreamsRegistry"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.stream.binder.kafka.streams.function.KafkaStreamsFunctionAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "persistenceExceptionTranslationPostProcessor",
        "parameterTypes": [
          "org.springframework.core.env.Environment"
        ]
      }
    ]
  },
  {
    "name": "org.apache.kafka.common.serialization.ByteArraySerializer",
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.netty.NettyProperties",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getLeakDetection",
        "parameterTypes": [ ]
      },
      {
        "name": "setLeakDetection",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.netty.NettyProperties$LeakDetection"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.info.ProjectInfoProperties",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getGit",
        "parameterTypes": [ ]
      },
      {
        "name": "getBuild",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.integration.handler.support.IntegrationMessageHandlerMethodFactory",
    "methods": [
      {
        "name": "setMessageConverter",
        "parameterTypes": [
          "org.springframework.messaging.converter.MessageConverter"
        ]
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.stream.config.PollerConfigEnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.apache.kafka.streams.processor.FailOnInvalidTimestamp",
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.aop.framework.autoproxy.InfrastructureAdvisorAutoProxyCreator",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.MultipartProperties",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setMaxFileSize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "getLocation",
        "parameterTypes": [ ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getMaxRequestSize",
        "parameterTypes": [ ]
      },
      {
        "name": "isResolveLazily",
        "parameterTypes": [ ]
      },
      {
        "name": "getEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxFileSize",
        "parameterTypes": [ ]
      },
      {
        "name": "getFileSizeThreshold",
        "parameterTypes": [ ]
      },
      {
        "name": "setLocation",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setResolveLazily",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setMaxRequestSize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "setFileSizeThreshold",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.integration.handler.MessageHandlerSupport",
    "methods": [
      {
        "name": "setOrder",
        "parameterTypes": [
          "int"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter",
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.env.SpringApplicationJsonEnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "java.util.zip.CRC32C",
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.kafka.support.serializer.ToStringSerializer",
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.integration.IntegrationProperties$RSocket$Server",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setMessageMappingEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "isMessageMappingEnabled",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.stream.config.BindingServiceProperties",
    "fields": [
      {
        "name": "instanceIndex"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getInstanceIndex",
        "parameterTypes": [ ]
      },
      {
        "name": "setBindingRetryInterval",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getSource",
        "parameterTypes": [ ]
      },
      {
        "name": "setDynamicDestinationCacheSize",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setInstanceIndex",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setOutputBindings",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "setInputBindings",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getBindings",
        "parameterTypes": [ ]
      },
      {
        "name": "setConversionService",
        "parameterTypes": [
          "org.springframework.core.convert.ConversionService"
        ]
      },
      {
        "name": "getOutputBindings",
        "parameterTypes": [ ]
      },
      {
        "name": "setInstanceIndexList",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setInstanceCount",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setDefaultBinder",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getInputBindings",
        "parameterTypes": [ ]
      },
      {
        "name": "getInstanceIndexList",
        "parameterTypes": [ ]
      },
      {
        "name": "getBinders",
        "parameterTypes": [ ]
      },
      {
        "name": "setDynamicDestinations",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "setSource",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getDynamicDestinationCacheSize",
        "parameterTypes": [ ]
      },
      {
        "name": "setBindings",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "getBindingRetryInterval",
        "parameterTypes": [ ]
      },
      {
        "name": "setBinders",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "getInstanceCount",
        "parameterTypes": [ ]
      },
      {
        "name": "getDynamicDestinations",
        "parameterTypes": [ ]
      },
      {
        "name": "getDefaultBinder",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.integration.IntegrationProperties$Jdbc",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getPlatform",
        "parameterTypes": [ ]
      },
      {
        "name": "setSchema",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getSchema",
        "parameterTypes": [ ]
      },
      {
        "name": "setInitializeSchema",
        "parameterTypes": [
          "org.springframework.boot.sql.init.DatabaseInitializationMode"
        ]
      },
      {
        "name": "setPlatform",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getInitializeSchema",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.ConfigurationWarningsApplicationContextInitializer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.apache.kafka.streams.processor.internals.assignment.StickyTaskAssignor",
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.util.MimeType",
    "methods": [
      {
        "name": "getParameters",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.integration.channel.PublishSubscribeChannel",
    "methods": [
      {
        "name": "setIgnoreFailures",
        "parameterTypes": [
          "boolean"
        ]
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.integration.channel.MessagePublishingErrorHandler",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.function.context.FunctionProperties",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getExpectedContentType",
        "parameterTypes": [ ]
      },
      {
        "name": "setRoutingExpression",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getDefinition",
        "parameterTypes": [ ]
      },
      {
        "name": "getApplicationContext",
        "parameterTypes": [ ]
      },
      {
        "name": "getIneligibleDefinitions",
        "parameterTypes": [ ]
      },
      {
        "name": "setExpectedContentType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getConfiguration",
        "parameterTypes": [ ]
      },
      {
        "name": "setIneligibleDefinitions",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "setConfiguration",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setEnvironment",
        "parameterTypes": [
          "org.springframework.core.env.Environment"
        ]
      },
      {
        "name": "getRoutingExpression",
        "parameterTypes": [ ]
      },
      {
        "name": "setDefinition",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getContentnegotiation",
        "parameterTypes": [ ]
      },
      {
        "name": "setLogResolvedException",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "isDispatchTraceRequest",
        "parameterTypes": [ ]
      },
      {
        "name": "getPathmatch",
        "parameterTypes": [ ]
      },
      {
        "name": "setMessageCodesResolverFormat",
        "parameterTypes": [
          "org.springframework.validation.DefaultMessageCodesResolver$Format"
        ]
      },
      {
        "name": "getProblemdetails",
        "parameterTypes": [ ]
      },
      {
        "name": "isLogResolvedException",
        "parameterTypes": [ ]
      },
      {
        "name": "setIgnoreDefaultModelOnRedirect",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "isThrowExceptionIfNoHandlerFound",
        "parameterTypes": [ ]
      },
      {
        "name": "getAsync",
        "parameterTypes": [ ]
      },
      {
        "name": "getView",
        "parameterTypes": [ ]
      },
      {
        "name": "setWebjarsPathPattern",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getMessageCodesResolverFormat",
        "parameterTypes": [ ]
      },
      {
        "name": "setStaticPathPattern",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDispatchTraceRequest",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getServlet",
        "parameterTypes": [ ]
      },
      {
        "name": "setThrowExceptionIfNoHandlerFound",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getWebjarsPathPattern",
        "parameterTypes": [ ]
      },
      {
        "name": "isDispatchOptionsRequest",
        "parameterTypes": [ ]
      },
      {
        "name": "getFormat",
        "parameterTypes": [ ]
      },
      {
        "name": "getStaticPathPattern",
        "parameterTypes": [ ]
      },
      {
        "name": "setLogRequestDetails",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "isLogRequestDetails",
        "parameterTypes": [ ]
      },
      {
        "name": "setDispatchOptionsRequest",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "isIgnoreDefaultModelOnRedirect",
        "parameterTypes": [ ]
      },
      {
        "name": "setPublishRequestHandledEvents",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "isPublishRequestHandledEvents",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$WhitelabelErrorViewConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "beanNameViewResolver",
        "parameterTypes": [ ]
      },
      {
        "name": "defaultErrorView",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.apache.kafka.common.serialization.StringSerializer",
    "allPublicConstructors": true
  },
  {
    "name": "org.apache.kafka.common.serialization.FloatSerializer",
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.integration.config.MessagingAnnotationPostProcessor",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.apache.kafka.common.serialization.ByteArrayDeserializer",
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.cloud.stream.config.SpelExpressionConverterConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "spelConverter",
        "parameterTypes": [
          "org.springframework.context.ConfigurableApplicationContext"
        ]
      },
      {
        "name": "spelPropertyAccessorRegistrar",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "com.fasterxml.jackson.databind.ser.std.TokenBufferSerializer",
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.web.context.MissingWebServerFactoryBeanFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.stream.binder.kafka.config.KafkaBinderConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "provisioningProvider",
        "parameterTypes": [
          "org.springframework.cloud.stream.binder.kafka.properties.KafkaBinderConfigurationProperties",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.boot.autoconfigure.kafka.KafkaProperties"
        ]
      },
      {
        "name": "configurationProperties",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.kafka.KafkaProperties"
        ]
      },
      {
        "name": "kafkaNullConverter",
        "parameterTypes": [ ]
      },
      {
        "name": "jaasInitializer",
        "parameterTypes": [
          "org.springframework.cloud.stream.binder.kafka.properties.KafkaBinderConfigurationProperties"
        ]
      },
      {
        "name": "kafkaMessageChannelBinder",
        "parameterTypes": [
          "org.springframework.cloud.stream.binder.kafka.properties.KafkaBinderConfigurationProperties",
          "org.springframework.cloud.stream.binder.kafka.provisioning.KafkaTopicProvisioner",
          "org.springframework.cloud.stream.config.ListenerContainerCustomizer",
          "org.springframework.cloud.stream.config.MessageSourceCustomizer",
          "org.springframework.cloud.stream.config.ProducerMessageHandlerCustomizer",
          "org.springframework.cloud.stream.config.ConsumerEndpointCustomizer",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.kafka.support.ProducerListener",
          "org.springframework.cloud.stream.binder.kafka.properties.KafkaExtendedBindingProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.stream.binder.kafka.common.KafkaBinderEnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.apache.kafka.common.serialization.LongDeserializer",
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Reactive",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getSession",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.config.ConfigDataNotFoundFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.messaging.ReactiveMessageHandler",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.cloud.stream.binder.kafka.streams.KafkaStreamsBinderEnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.kafka.core.KafkaResourceFactory",
    "allDeclaredConstructors": true,
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "propertySourcesPlaceholderConfigurer",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Threads",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getMax",
        "parameterTypes": [ ]
      },
      {
        "name": "setMax",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setMinSpare",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getMinSpare",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.integration.support.converter.DefaultDatatypeChannelMessageConverter",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.embedded.tomcat.ConnectorStartFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.stream.config.BinderFactoryAutoConfiguration",
    "fields": [
      {
        "name": "selfContained"
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "messageHandlerMethodFactory",
        "parameterTypes": [
          "org.springframework.messaging.converter.CompositeMessageConverter",
          "org.springframework.validation.Validator",
          "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
        ]
      },
      {
        "name": "binderTypeRegistry",
        "parameterTypes": [
          "org.springframework.context.ConfigurableApplicationContext"
        ]
      },
      {
        "name": "messageSourceFactory",
        "parameterTypes": [
          "org.springframework.messaging.converter.CompositeMessageConverter",
          "org.springframework.cloud.stream.binding.CompositeMessageChannelConfigurer"
        ]
      },
      {
        "name": "fluxMessageChannelBindingTargetFactory",
        "parameterTypes": [
          "org.springframework.cloud.stream.binding.CompositeMessageChannelConfigurer",
          "org.springframework.context.support.GenericApplicationContext"
        ]
      },
      {
        "name": "messageConverterConfigurer",
        "parameterTypes": [
          "org.springframework.cloud.stream.config.BindingServiceProperties",
          "org.springframework.messaging.converter.CompositeMessageConverter",
          "org.springframework.cloud.stream.function.StreamFunctionProperties"
        ]
      },
      {
        "name": "compositeMessageChannelConfigurer",
        "parameterTypes": [
          "org.springframework.cloud.stream.binding.MessageConverterConfigurer"
        ]
      },
      {
        "name": "channelFactory",
        "parameterTypes": [
          "org.springframework.cloud.stream.binding.CompositeMessageChannelConfigurer"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.stream.binding.AbstractBindingLifecycle",
    "fields": [
      {
        "name": "context"
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.FileEncodingApplicationListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.ContextIdApplicationContextInitializer",
    "allDeclaredConstructors": true
  },
  {
    "name": "java.lang.String"
  },
  {
    "name": "org.springframework.boot.context.config.AnsiOutputApplicationListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.integration.config.CustomConversionServiceFactoryBean",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.kafka.listener.ConsumerProperties",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.context.properties.BoundConfigurationProperties",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Retry",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getTopic",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.integration.IntegrationAutoConfiguration$IntegrationTaskSchedulerConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "taskScheduler",
        "parameterTypes": [
          "org.springframework.boot.task.TaskSchedulerBuilder"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Jetty$Threads",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getAcceptors",
        "parameterTypes": [ ]
      },
      {
        "name": "getMax",
        "parameterTypes": [ ]
      },
      {
        "name": "setMax",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setSelectors",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "getMin",
        "parameterTypes": [ ]
      },
      {
        "name": "setMaxQueueCapacity",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "getSelectors",
        "parameterTypes": [ ]
      },
      {
        "name": "setMin",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "getMaxQueueCapacity",
        "parameterTypes": [ ]
      },
      {
        "name": "setIdleTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setAcceptors",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "getIdleTimeout",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.env.RandomValuePropertySourceEnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.web.context.ConfigurableWebApplicationContext"
  },
  {
    "name": "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration$ThymeleafViewResolverConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "thymeleafViewResolver",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties",
          "org.thymeleaf.spring6.SpringTemplateEngine"
        ]
      }
    ]
  },
  {
    "name": "com.fasterxml.jackson.databind.ser.std.StdJdkSerializers$AtomicIntegerSerializer",
    "allPublicConstructors": true
  },
  {
    "name": "org.apache.kafka.common.serialization.DoubleDeserializer",
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.OnClassCondition",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.JspTemplateAvailabilityProvider",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Resource",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setCacheTtl",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "isAllowCaching",
        "parameterTypes": [ ]
      },
      {
        "name": "setAllowCaching",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getCacheTtl",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.integration.core.GenericSelector",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.context.properties.ConfigurationPropertiesBinder",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setPlatform",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getUsername",
        "parameterTypes": [ ]
      },
      {
        "name": "setContinueOnError",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getPlatform",
        "parameterTypes": [ ]
      },
      {
        "name": "isContinueOnError",
        "parameterTypes": [ ]
      },
      {
        "name": "setEncoding",
        "parameterTypes": [
          "java.nio.charset.Charset"
        ]
      },
      {
        "name": "getPassword",
        "parameterTypes": [ ]
      },
      {
        "name": "getSeparator",
        "parameterTypes": [ ]
      },
      {
        "name": "setMode",
        "parameterTypes": [
          "org.springframework.boot.sql.init.DatabaseInitializationMode"
        ]
      },
      {
        "name": "getSchemaLocations",
        "parameterTypes": [ ]
      },
      {
        "name": "getDataLocations",
        "parameterTypes": [ ]
      },
      {
        "name": "setUsername",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSeparator",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSchemaLocations",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setDataLocations",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getEncoding",
        "parameterTypes": [ ]
      },
      {
        "name": "getMode",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.apache.kafka.clients.consumer.StickyAssignor",
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$Format",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setDateTime",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getDate",
        "parameterTypes": [ ]
      },
      {
        "name": "getTime",
        "parameterTypes": [ ]
      },
      {
        "name": "setDate",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getDateTime",
        "parameterTypes": [ ]
      },
      {
        "name": "setTime",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.config.DelegatingApplicationListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.integration.IntegrationProperties$Error",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setIgnoreFailures",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRequireSubscribers",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "isIgnoreFailures",
        "parameterTypes": [ ]
      },
      {
        "name": "isRequireSubscribers",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Admin",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "isModifyTopicConfigs",
        "parameterTypes": [ ]
      },
      {
        "name": "setFailFast",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setModifyTopicConfigs",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getProperties",
        "parameterTypes": [ ]
      },
      {
        "name": "getClientId",
        "parameterTypes": [ ]
      },
      {
        "name": "isFailFast",
        "parameterTypes": [ ]
      },
      {
        "name": "setClientId",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.integration.core.GenericTransformer",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Chain$Strategy",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getContent",
        "parameterTypes": [ ]
      },
      {
        "name": "getFixed",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.aop.framework.ProxyProcessorSupport",
    "methods": [
      {
        "name": "setOrder",
        "parameterTypes": [
          "int"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.config.StandardConfigDataLoader",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.integration.core.Pausable",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.kafka.support.ProducerListener",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceBeanCreationFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.OnWebApplicationCondition",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.integration.config.ConsumerEndpointFactoryBean",
    "methods": [
      {
        "name": "setInputChannelName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setHandler",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ErrorProperties",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getIncludeMessage",
        "parameterTypes": [ ]
      },
      {
        "name": "setPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isIncludeException",
        "parameterTypes": [ ]
      },
      {
        "name": "setIncludeBindingErrors",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.ErrorProperties$IncludeAttribute"
        ]
      },
      {
        "name": "getWhitelabel",
        "parameterTypes": [ ]
      },
      {
        "name": "getIncludeBindingErrors",
        "parameterTypes": [ ]
      },
      {
        "name": "setIncludeException",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setIncludeStacktrace",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.ErrorProperties$IncludeAttribute"
        ]
      },
      {
        "name": "setIncludeMessage",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.ErrorProperties$IncludeAttribute"
        ]
      },
      {
        "name": "getPath",
        "parameterTypes": [ ]
      },
      {
        "name": "getIncludeStacktrace",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$Async",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getRequestTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "setRequestTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.r2dbc.NoConnectionFactoryBeanFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.config.ConfigTreeConfigDataLocationResolver",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.integration.support.DefaultMessageBuilderFactory",
    "methods": [
      {
        "name": "setReadOnlyHeaders",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.stream.function.RoutingFunctionEnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.flyway.FlywayMigrationInitializerDatabaseInitializerDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.BindFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ErrorProperties$Whitelabel",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.liquibase.LiquibaseDatabaseInitializerDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.integration.config.IntegrationManagementConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "managementConfigurer",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "java.util.Map"
  },
  {
    "name": "org.springframework.integration.config.IntegrationEvaluationContextFactoryBean",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.stream.binder.kafka.streams.KStreamBinderConfiguration$$SpringCGLIB$$2",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Retry$Topic",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "setMultiplier",
        "parameterTypes": [
          "double"
        ]
      },
      {
        "name": "setAttempts",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getDelay",
        "parameterTypes": [ ]
      },
      {
        "name": "getAttempts",
        "parameterTypes": [ ]
      },
      {
        "name": "setDelay",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setRandomBackOff",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getMultiplier",
        "parameterTypes": [ ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getMaxDelay",
        "parameterTypes": [ ]
      },
      {
        "name": "isRandomBackOff",
        "parameterTypes": [ ]
      },
      {
        "name": "setMaxDelay",
        "parameterTypes": [
          "java.time.Duration"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.stream.binder.kafka.streams.KStreamBinderConfiguration$$SpringCGLIB$$1",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.stream.binder.kafka.streams.KStreamBinderConfiguration$$SpringCGLIB$$0",
    "allDeclaredConstructors": true,
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.kafka.support.serializer.JsonSerializer",
    "allPublicConstructors": true
  },
  {
    "name": "org.apache.kafka.common.protocol.Message",
    "allDeclaredConstructors": true,
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration",
    "queriedMethods": [
      {
        "name": "setConfigurers",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "com.fasterxml.jackson.databind.ser.std.StdJdkSerializers$AtomicBooleanSerializer",
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.FailureAnalyzers",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.aop.framework.ProxyConfig",
    "methods": [
      {
        "name": "setProxyTargetClass",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$Servlet",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getPath",
        "parameterTypes": [ ]
      },
      {
        "name": "getLoadOnStartup",
        "parameterTypes": [ ]
      },
      {
        "name": "setPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLoadOnStartup",
        "parameterTypes": [
          "int"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContextFactory",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.http.client.AbstractClientHttpRequestFactoryWrapper",
    "fields": [
      {
        "name": "requestFactory"
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController",
    "methods": [
      {
        "name": "mediaTypeNotAcceptable",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest"
        ]
      },
      {
        "name": "error",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest"
        ]
      },
      {
        "name": "errorHtml",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "jakarta.servlet.http.HttpServletResponse"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.stream.binding.SubscribableChannelBindingTargetFactory",
    "fields": [
      {
        "name": "context"
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Jetty",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getAccesslog",
        "parameterTypes": [ ]
      },
      {
        "name": "setConnectionIdleTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setMaxHttpFormPostSize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "getConnectionIdleTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxHttpFormPostSize",
        "parameterTypes": [ ]
      },
      {
        "name": "getThreads",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.integration.core.GenericHandler",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.cloud.function.context.config.KotlinLambdaToFunctionAutoConfiguration",
    "allPublicMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.redis.RedisUrlSyntaxFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties$Pool",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setSize",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getSize",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.integration.channel.NullChannel",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.integration.config.IntegrationConfigurationInitializer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.kafka.core.KafkaOperations",
    "allDeclaredConstructors": true,
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport",
    "queriedMethods": [
      {
        "name": "mvcResourceUrlProvider",
        "parameterTypes": [ ]
      },
      {
        "name": "mvcViewResolver",
        "parameterTypes": [
          "org.springframework.web.accept.ContentNegotiationManager"
        ]
      },
      {
        "name": "viewControllerHandlerMapping",
        "parameterTypes": [
          "org.springframework.format.support.FormattingConversionService",
          "org.springframework.web.servlet.resource.ResourceUrlProvider"
        ]
      },
      {
        "name": "handlerExceptionResolver",
        "parameterTypes": [
          "org.springframework.web.accept.ContentNegotiationManager"
        ]
      },
      {
        "name": "handlerFunctionAdapter",
        "parameterTypes": [ ]
      },
      {
        "name": "mvcUriComponentsContributor",
        "parameterTypes": [
          "org.springframework.format.support.FormattingConversionService",
          "org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"
        ]
      },
      {
        "name": "viewNameTranslator",
        "parameterTypes": [ ]
      },
      {
        "name": "resourceHandlerMapping",
        "parameterTypes": [
          "org.springframework.web.accept.ContentNegotiationManager",
          "org.springframework.format.support.FormattingConversionService",
          "org.springframework.web.servlet.resource.ResourceUrlProvider"
        ]
      },
      {
        "name": "routerFunctionMapping",
        "parameterTypes": [
          "org.springframework.format.support.FormattingConversionService",
          "org.springframework.web.servlet.resource.ResourceUrlProvider"
        ]
      },
      {
        "name": "beanNameHandlerMapping",
        "parameterTypes": [
          "org.springframework.format.support.FormattingConversionService",
          "org.springframework.web.servlet.resource.ResourceUrlProvider"
        ]
      },
      {
        "name": "mvcPathMatcher",
        "parameterTypes": [ ]
      },
      {
        "name": "mvcUrlPathHelper",
        "parameterTypes": [ ]
      },
      {
        "name": "httpRequestHandlerAdapter",
        "parameterTypes": [ ]
      },
      {
        "name": "requestMappingHandlerMapping",
        "parameterTypes": [
          "org.springframework.web.accept.ContentNegotiationManager",
          "org.springframework.format.support.FormattingConversionService",
          "org.springframework.web.servlet.resource.ResourceUrlProvider"
        ]
      },
      {
        "name": "defaultServletHandlerMapping",
        "parameterTypes": [ ]
      },
      {
        "name": "simpleControllerHandlerAdapter",
        "parameterTypes": [ ]
      },
      {
        "name": "mvcPatternParser",
        "parameterTypes": [ ]
      },
      {
        "name": "mvcHandlerMappingIntrospector",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.stream.binder.kafka.streams.properties.KafkaStreamsBindingProperties",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setConsumer",
        "parameterTypes": [
          "org.springframework.cloud.stream.binder.kafka.streams.properties.KafkaStreamsConsumerProperties"
        ]
      },
      {
        "name": "getConsumer",
        "parameterTypes": [ ]
      },
      {
        "name": "setProducer",
        "parameterTypes": [
          "org.springframework.cloud.stream.binder.kafka.streams.properties.KafkaStreamsProducerProperties"
        ]
      },
      {
        "name": "getProducer",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.kafka.annotation.KafkaBootstrapConfiguration",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.function.context.FunctionProperties$FunctionConfigurationProperties",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getInputHeaderMappingExpression",
        "parameterTypes": [ ]
      },
      {
        "name": "setCopyInputHeaders",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getOutputHeaderMappingExpression",
        "parameterTypes": [ ]
      },
      {
        "name": "isCopyInputHeaders",
        "parameterTypes": [ ]
      },
      {
        "name": "setOutputHeaderMappingExpression",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setInputHeaderMappingExpression",
        "parameterTypes": [
          "java.util.Map"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.AutoConfigurationPackages$BasePackages",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.BackgroundPreinitializer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.kafka.KafkaAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.kafka.KafkaProperties"
        ]
      },
      {
        "name": "kafkaProducerFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "kafkaTemplate",
        "parameterTypes": [
          "org.springframework.kafka.core.ProducerFactory",
          "org.springframework.kafka.support.ProducerListener",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "kafkaConsumerFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "kafkaAdmin",
        "parameterTypes": [ ]
      },
      {
        "name": "kafkaProducerListener",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getUndertow",
        "parameterTypes": [ ]
      },
      {
        "name": "setAddress",
        "parameterTypes": [
          "java.net.InetAddress"
        ]
      },
      {
        "name": "getMaxHttpRequestHeaderSize",
        "parameterTypes": [ ]
      },
      {
        "name": "getNetty",
        "parameterTypes": [ ]
      },
      {
        "name": "setPort",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "getSsl",
        "parameterTypes": [ ]
      },
      {
        "name": "getAddress",
        "parameterTypes": [ ]
      },
      {
        "name": "setShutdown",
        "parameterTypes": [
          "org.springframework.boot.web.server.Shutdown"
        ]
      },
      {
        "name": "setMaxHttpHeaderSize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "getJetty",
        "parameterTypes": [ ]
      },
      {
        "name": "setForwardHeadersStrategy",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.ServerProperties$ForwardHeadersStrategy"
        ]
      },
      {
        "name": "getServlet",
        "parameterTypes": [ ]
      },
      {
        "name": "getReactive",
        "parameterTypes": [ ]
      },
      {
        "name": "getError",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxHttpHeaderSize",
        "parameterTypes": [ ]
      },
      {
        "name": "getServerHeader",
        "parameterTypes": [ ]
      },
      {
        "name": "getHttp2",
        "parameterTypes": [ ]
      },
      {
        "name": "setMaxHttpRequestHeaderSize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "getCompression",
        "parameterTypes": [ ]
      },
      {
        "name": "getTomcat",
        "parameterTypes": [ ]
      },
      {
        "name": "getPort",
        "parameterTypes": [ ]
      },
      {
        "name": "getShutdown",
        "parameterTypes": [ ]
      },
      {
        "name": "setSsl",
        "parameterTypes": [
          "org.springframework.boot.web.server.Ssl"
        ]
      },
      {
        "name": "setServerHeader",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getForwardHeadersStrategy",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.apache.kafka.streams.errors.DefaultProductionExceptionHandler",
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.web.server.Cookie",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getDomain",
        "parameterTypes": [ ]
      },
      {
        "name": "setDomain",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getSecure",
        "parameterTypes": [ ]
      },
      {
        "name": "getPath",
        "parameterTypes": [ ]
      },
      {
        "name": "setPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSameSite",
        "parameterTypes": [
          "org.springframework.boot.web.server.Cookie$SameSite"
        ]
      },
      {
        "name": "getName",
        "parameterTypes": [ ]
      },
      {
        "name": "setMaxAge",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "getHttpOnly",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxAge",
        "parameterTypes": [ ]
      },
      {
        "name": "setHttpOnly",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSecure",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "getSameSite",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.kafka.KafkaAnnotationDrivenConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.kafka.KafkaProperties",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "kafkaListenerContainerFactoryConfigurer",
        "parameterTypes": [ ]
      },
      {
        "name": "kafkaListenerContainerFactory",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.kafka.ConcurrentKafkaListenerContainerFactoryConfigurer",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.mustache.MustacheTemplateAvailabilityProvider",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Producer",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setCompressionType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getProperties",
        "parameterTypes": [ ]
      },
      {
        "name": "setValueSerializer",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "setRetries",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "getKeySerializer",
        "parameterTypes": [ ]
      },
      {
        "name": "setBatchSize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "setKeySerializer",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "setAcks",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getRetries",
        "parameterTypes": [ ]
      },
      {
        "name": "setClientId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getBufferMemory",
        "parameterTypes": [ ]
      },
      {
        "name": "getTransactionIdPrefix",
        "parameterTypes": [ ]
      },
      {
        "name": "getCompressionType",
        "parameterTypes": [ ]
      },
      {
        "name": "getBatchSize",
        "parameterTypes": [ ]
      },
      {
        "name": "setTransactionIdPrefix",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setBufferMemory",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "setBootstrapServers",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "getValueSerializer",
        "parameterTypes": [ ]
      },
      {
        "name": "getBootstrapServers",
        "parameterTypes": [ ]
      },
      {
        "name": "getAcks",
        "parameterTypes": [ ]
      },
      {
        "name": "getClientId",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.orm.jpa.JpaDependsOnDatabaseInitializationDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.kafka.config.KafkaListenerEndpointRegistry",
    "allDeclaredConstructors": true,
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.logging.logback.ColorConverter",
    "allPublicConstructors": true
  },
  {
    "name": "java.sql.Date",
    "condition": {
      "typeReachable": "java.sql.Date"
    },
    "methods": [
      {
        "name": "valueOf",
        "parameterTypes": [
          "java.time.LocalDate"
        ]
      },
      {
        "name": "toLocalDate",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.env.PropertySourceLoader",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.thymeleaf.TemplateEngineConfigurations$DefaultTemplateEngineConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "templateEngine",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.kafka.config.KafkaListenerContainerFactory",
    "allDeclaredConstructors": true,
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.OnBeanCondition",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.integration.IntegrationProperties$Poller",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getFixedDelay",
        "parameterTypes": [ ]
      },
      {
        "name": "getFixedRate",
        "parameterTypes": [ ]
      },
      {
        "name": "setFixedDelay",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setMaxMessagesPerPoll",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setCron",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getInitialDelay",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxMessagesPerPoll",
        "parameterTypes": [ ]
      },
      {
        "name": "setReceiveTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "getCron",
        "parameterTypes": [ ]
      },
      {
        "name": "setFixedRate",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setInitialDelay",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "getReceiveTimeout",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "taskExecutorBuilder",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.task.TaskExecutionProperties",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "applicationTaskExecutor",
        "parameterTypes": [
          "org.springframework.boot.task.TaskExecutorBuilder"
        ]
      }
    ]
  },
  {
    "name": "org.apache.kafka.common.serialization.Serdes$BytesSerde",
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.integration.config.IdGeneratorConfigurer",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "jakarta.servlet.Servlet"
  },
  {
    "name": "org.apache.kafka.streams.processor.internals.StreamsPartitionAssignor",
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.integration.IntegrationAutoConfiguration$IntegrationComponentScanConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Template",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setDefaultTopic",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getDefaultTopic",
        "parameterTypes": [ ]
      },
      {
        "name": "setTransactionIdPrefix",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getTransactionIdPrefix",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.slf4j.bridge.SLF4JBridgeHandler"
  },
  {
    "name": "org.springframework.boot.autoconfigure.integration.IntegrationProperties$RSocket$Client",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setPort",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "getPort",
        "parameterTypes": [ ]
      },
      {
        "name": "setUri",
        "parameterTypes": [
          "java.net.URI"
        ]
      },
      {
        "name": "getUri",
        "parameterTypes": [ ]
      },
      {
        "name": "setHost",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getHost",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.logging.LoggingSystemFactory",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.web.servlet.DispatcherServlet"
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskExecutionProperties$Shutdown",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setAwaitTerminationPeriod",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "getAwaitTerminationPeriod",
        "parameterTypes": [ ]
      },
      {
        "name": "isAwaitTermination",
        "parameterTypes": [ ]
      },
      {
        "name": "setAwaitTermination",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "com.fasterxml.jackson.datatype.jsr310.JavaTimeModule",
    "condition": {
      "typeReachable": "org.springframework.http.converter.json.Jackson2ObjectMapperBuilder"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.http.codec.support.DefaultServerCodecConfigurer",
    "condition": {
      "typeReachable": "org.springframework.http.codec.CodecConfigurerFactory"
    },
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$ClassProxyingConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "forceAutoProxyCreatorToUseClassProxying",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.WebProperties",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setLocale",
        "parameterTypes": [
          "java.util.Locale"
        ]
      },
      {
        "name": "getLocale",
        "parameterTypes": [ ]
      },
      {
        "name": "getLocaleResolver",
        "parameterTypes": [ ]
      },
      {
        "name": "setLocaleResolver",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.WebProperties$LocaleResolver"
        ]
      },
      {
        "name": "getResources",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.r2dbc.init.R2dbcScriptDatabaseInitializerDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties",
          "org.springframework.boot.autoconfigure.web.WebProperties",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ListableBeanFactory"
        ]
      },
      {
        "name": "welcomePageHandlerMapping",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext",
          "org.springframework.format.support.FormattingConversionService",
          "org.springframework.web.servlet.resource.ResourceUrlProvider"
        ]
      },
      {
        "name": "themeResolver",
        "parameterTypes": [ ]
      },
      {
        "name": "localeResolver",
        "parameterTypes": [ ]
      },
      {
        "name": "requestMappingHandlerAdapter",
        "parameterTypes": [
          "org.springframework.web.accept.ContentNegotiationManager",
          "org.springframework.format.support.FormattingConversionService",
          "org.springframework.validation.Validator"
        ]
      },
      {
        "name": "mvcContentNegotiationManager",
        "parameterTypes": [ ]
      },
      {
        "name": "mvcValidator",
        "parameterTypes": [ ]
      },
      {
        "name": "mvcConversionService",
        "parameterTypes": [ ]
      },
      {
        "name": "flashMapManager",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.server.WebServerFactoryCustomizerBeanPostProcessor",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Undertow$Options",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getServer",
        "parameterTypes": [ ]
      },
      {
        "name": "getSocket",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.integration.IntegrationPropertiesEnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.kafka.annotation.KafkaListenerAnnotationBeanPostProcessor",
    "allDeclaredConstructors": true,
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Security",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setProtocol",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getProtocol",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.SpringApplicationRunListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.PortInUseFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionEvaluationReportAutoConfigurationImportListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.kafka.core.KafkaTemplate",
    "allDeclaredConstructors": true,
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.integration.IntegrationProperties$Channel",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setMaxBroadcastSubscribers",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getMaxBroadcastSubscribers",
        "parameterTypes": [ ]
      },
      {
        "name": "setAutoCreate",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setMaxUnicastSubscribers",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getMaxUnicastSubscribers",
        "parameterTypes": [ ]
      },
      {
        "name": "isAutoCreate",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "kotlin.jvm.functions.Function0",
    "allPublicMethods": true
  },
  {
    "name": "kotlin.jvm.functions.Function1",
    "allPublicMethods": true
  },
  {
    "name": "org.apache.kafka.common.serialization.FloatDeserializer",
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.cloud.function.cloudevent.CloudEventsFunctionExtensionConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "nativeFunctionInvocationHelper",
        "parameterTypes": [
          "org.springframework.cloud.function.cloudevent.CloudEventHeaderEnricher"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "taskSchedulerBuilder",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.integration.channel.DefaultHeaderChannelRegistry",
    "methods": [
      {
        "name": "start",
        "parameterTypes": [ ]
      },
      {
        "name": "stop",
        "parameterTypes": [ ]
      },
      {
        "name": "isRunning",
        "parameterTypes": [ ]
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.netty.NettyAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.netty.NettyProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer$DependsOnDatabaseInitializationPostProcessor",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Cache$Cachecontrol",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setNoCache",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setMustRevalidate",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "getNoTransform",
        "parameterTypes": [ ]
      },
      {
        "name": "getSMaxAge",
        "parameterTypes": [ ]
      },
      {
        "name": "getStaleWhileRevalidate",
        "parameterTypes": [ ]
      },
      {
        "name": "setStaleWhileRevalidate",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "getStaleIfError",
        "parameterTypes": [ ]
      },
      {
        "name": "setCachePublic",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "getCachePublic",
        "parameterTypes": [ ]
      },
      {
        "name": "getProxyRevalidate",
        "parameterTypes": [ ]
      },
      {
        "name": "setSMaxAge",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setStaleIfError",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "getCachePrivate",
        "parameterTypes": [ ]
      },
      {
        "name": "setNoTransform",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setMaxAge",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setNoStore",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "getMustRevalidate",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxAge",
        "parameterTypes": [ ]
      },
      {
        "name": "setProxyRevalidate",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "getNoStore",
        "parameterTypes": [ ]
      },
      {
        "name": "setCachePrivate",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "getNoCache",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.WebProperties$Resources",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getStaticLocations",
        "parameterTypes": [ ]
      },
      {
        "name": "setStaticLocations",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "getCache",
        "parameterTypes": [ ]
      },
      {
        "name": "setAddMappings",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getChain",
        "parameterTypes": [ ]
      },
      {
        "name": "isAddMappings",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.jooq.JooqDependsOnDatabaseInitializationDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.integration.gateway.MethodArgsHolder",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.integration.config.IntegrationConverterInitializer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setThreadNamePrefix",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getPool",
        "parameterTypes": [ ]
      },
      {
        "name": "getThreadNamePrefix",
        "parameterTypes": [ ]
      },
      {
        "name": "getShutdown",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.context.ApplicationContextInitializer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.stream.binder.kafka.streams.MultiBinderPropertiesConfiguration",
    "allPublicMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.AutoConfigurationImportListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.ServerProperties"
        ]
      },
      {
        "name": "localeCharsetMappingsCustomizer",
        "parameterTypes": [ ]
      },
      {
        "name": "characterEncodingFilter",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.stream.config.SpringIntegrationProperties",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setMessageHandlerNotPropagatedHeaders",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "getMessageHandlerNotPropagatedHeaders",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.BindValidationFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "methodValidationPostProcessor",
        "parameterTypes": [
          "org.springframework.core.env.Environment",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "defaultValidator",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonMixinConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "jsonMixinModule",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext",
          "org.springframework.boot.jackson.JsonMixinModuleEntries"
        ]
      }
    ]
  },
  {
    "name": "com.mehkey.KafkaStreamsTopSellers.KafkaStreamsTopSellersApplication__ApplicationContextInitializer",
    "condition": {
      "typeReachable": "com.mehkey.KafkaStreamsTopSellers.KafkaStreamsTopSellersApplication"
    },
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Undertow",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "isPreservePathOnForward",
        "parameterTypes": [ ]
      },
      {
        "name": "setMaxHeaders",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setUrlCharset",
        "parameterTypes": [
          "java.nio.charset.Charset"
        ]
      },
      {
        "name": "setEagerFilterInit",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "isDecodeUrl",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxHttpPostSize",
        "parameterTypes": [ ]
      },
      {
        "name": "setDirectBuffers",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "getMaxParameters",
        "parameterTypes": [ ]
      },
      {
        "name": "setMaxParameters",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "getNoRequestTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "setMaxHttpPostSize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "getDirectBuffers",
        "parameterTypes": [ ]
      },
      {
        "name": "getUrlCharset",
        "parameterTypes": [ ]
      },
      {
        "name": "setMaxCookies",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "getThreads",
        "parameterTypes": [ ]
      },
      {
        "name": "isAlwaysSetKeepAlive",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxHeaders",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxCookies",
        "parameterTypes": [ ]
      },
      {
        "name": "setDecodeUrl",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "getAccesslog",
        "parameterTypes": [ ]
      },
      {
        "name": "setBufferSize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "isAllowEncodedSlash",
        "parameterTypes": [ ]
      },
      {
        "name": "setAllowEncodedSlash",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setAlwaysSetKeepAlive",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setNoRequestTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "getBufferSize",
        "parameterTypes": [ ]
      },
      {
        "name": "setPreservePathOnForward",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getOptions",
        "parameterTypes": [ ]
      },
      {
        "name": "isEagerFilterInit",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.apache.kafka.common.utils.AppInfoParser$AppInfo",
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.batch.JobRepositoryDependsOnDatabaseInitializationDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.kafka.listener.ContainerProperties",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.context.config.ConfigDataLocation",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "boolean",
          "java.lang.String",
          "org.springframework.boot.origin.Origin"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Accesslog",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setFileDateFormat",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isRotate",
        "parameterTypes": [ ]
      },
      {
        "name": "getDirectory",
        "parameterTypes": [ ]
      },
      {
        "name": "getFileDateFormat",
        "parameterTypes": [ ]
      },
      {
        "name": "setRequestAttributesEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "isCheckExists",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxDays",
        "parameterTypes": [ ]
      },
      {
        "name": "getPattern",
        "parameterTypes": [ ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getSuffix",
        "parameterTypes": [ ]
      },
      {
        "name": "setDirectory",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isIpv6Canonical",
        "parameterTypes": [ ]
      },
      {
        "name": "setBuffered",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getEncoding",
        "parameterTypes": [ ]
      },
      {
        "name": "setMaxDays",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setRotate",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "isBuffered",
        "parameterTypes": [ ]
      },
      {
        "name": "getPrefix",
        "parameterTypes": [ ]
      },
      {
        "name": "setCheckExists",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setConditionUnless",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSuffix",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPrefix",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getConditionIf",
        "parameterTypes": [ ]
      },
      {
        "name": "setConditionIf",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEncoding",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRenameOnRotate",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setIpv6Canonical",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "isRequestAttributesEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "isRenameOnRotate",
        "parameterTypes": [ ]
      },
      {
        "name": "getConditionUnless",
        "parameterTypes": [ ]
      },
      {
        "name": "getLocale",
        "parameterTypes": [ ]
      },
      {
        "name": "setPattern",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLocale",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$View",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getPrefix",
        "parameterTypes": [ ]
      },
      {
        "name": "setPrefix",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSuffix",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getSuffix",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.http.client.SimpleClientHttpRequestFactory",
    "condition": {
      "typeReachable": "java.net.HttpURLConnection"
    },
    "methods": [
      {
        "name": "setBufferRequestBody",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setConnectTimeout",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setReadTimeout",
        "parameterTypes": [
          "int"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.stream.binder.kafka.streams.KTableBinderConfiguration",
    "allPublicMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "provisioningProvider",
        "parameterTypes": [
          "org.springframework.cloud.stream.binder.kafka.streams.properties.KafkaStreamsBinderConfigurationProperties",
          "org.springframework.boot.autoconfigure.kafka.KafkaProperties",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "kTableBinder",
        "parameterTypes": [
          "org.springframework.cloud.stream.binder.kafka.streams.properties.KafkaStreamsBinderConfigurationProperties",
          "org.springframework.cloud.stream.binder.kafka.provisioning.KafkaTopicProvisioner",
          "org.springframework.cloud.stream.binder.kafka.streams.properties.KafkaStreamsExtendedBindingProperties",
          "org.springframework.cloud.stream.binder.kafka.streams.KafkaStreamsBindingInformationCatalogue",
          "java.util.Map",
          "org.springframework.cloud.stream.binder.kafka.streams.KafkaStreamsRegistry"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Streams",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getClientId",
        "parameterTypes": [ ]
      },
      {
        "name": "getBootstrapServers",
        "parameterTypes": [ ]
      },
      {
        "name": "getStateDir",
        "parameterTypes": [ ]
      },
      {
        "name": "getReplicationFactor",
        "parameterTypes": [ ]
      },
      {
        "name": "isAutoStartup",
        "parameterTypes": [ ]
      },
      {
        "name": "setStateDir",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCacheMaxSizeBuffering",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "setClientId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getProperties",
        "parameterTypes": [ ]
      },
      {
        "name": "getApplicationId",
        "parameterTypes": [ ]
      },
      {
        "name": "setReplicationFactor",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setBootstrapServers",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "getCacheMaxSizeBuffering",
        "parameterTypes": [ ]
      },
      {
        "name": "setApplicationId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setAutoStartup",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.stream.binder.kafka.streams.properties.KafkaStreamsBinderConfigurationProperties",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.kafka.KafkaProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.TransactionProperties",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setDefaultTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "getRollbackOnCommitFailure",
        "parameterTypes": [ ]
      },
      {
        "name": "setRollbackOnCommitFailure",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "getDefaultTimeout",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.apache.kafka.common.serialization.ListSerializer",
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "dispatcherServletRegistration",
        "parameterTypes": [
          "org.springframework.web.servlet.DispatcherServlet",
          "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.server.Ssl",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getClientAuth",
        "parameterTypes": [ ]
      },
      {
        "name": "getTrustStoreType",
        "parameterTypes": [ ]
      },
      {
        "name": "setTrustCertificatePrivateKey",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getTrustCertificate",
        "parameterTypes": [ ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "getKeyAlias",
        "parameterTypes": [ ]
      },
      {
        "name": "getKeyStoreProvider",
        "parameterTypes": [ ]
      },
      {
        "name": "setKeyStoreType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCertificate",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setKeyStoreProvider",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getCertificatePrivateKey",
        "parameterTypes": [ ]
      },
      {
        "name": "setClientAuth",
        "parameterTypes": [
          "org.springframework.boot.web.server.Ssl$ClientAuth"
        ]
      },
      {
        "name": "getKeyPassword",
        "parameterTypes": [ ]
      },
      {
        "name": "setKeyAlias",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setProtocol",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getKeyStorePassword",
        "parameterTypes": [ ]
      },
      {
        "name": "setTrustStore",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getTrustStore",
        "parameterTypes": [ ]
      },
      {
        "name": "getTrustCertificatePrivateKey",
        "parameterTypes": [ ]
      },
      {
        "name": "setKeyStorePassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEnabledProtocols",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "setCertificatePrivateKey",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getTrustStorePassword",
        "parameterTypes": [ ]
      },
      {
        "name": "getKeyStore",
        "parameterTypes": [ ]
      },
      {
        "name": "setTrustCertificate",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTrustStoreType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getKeyStoreType",
        "parameterTypes": [ ]
      },
      {
        "name": "setTrustStoreProvider",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getProtocol",
        "parameterTypes": [ ]
      },
      {
        "name": "setKeyPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTrustStorePassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getTrustStoreProvider",
        "parameterTypes": [ ]
      },
      {
        "name": "setKeyStore",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getEnabledProtocols",
        "parameterTypes": [ ]
      },
      {
        "name": "setCiphers",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "getCiphers",
        "parameterTypes": [ ]
      },
      {
        "name": "getCertificate",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.config.ConfigDataEnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "com.mehkey.KafkaStreamsTopSellers.KafkaStreamsTopSellersApplication",
    "allPublicMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "streamsConfig",
        "parameterTypes": [ ]
      },
      {
        "name": "topology",
        "parameterTypes": [ ]
      },
      {
        "name": "kafkaStreams",
        "parameterTypes": [
          "org.apache.kafka.streams.Topology",
          "org.apache.kafka.streams.StreamsConfig"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Chain",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "getStrategy",
        "parameterTypes": [ ]
      },
      {
        "name": "setCompressed",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "isCompressed",
        "parameterTypes": [ ]
      },
      {
        "name": "isCache",
        "parameterTypes": [ ]
      },
      {
        "name": "setCache",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.integration.dsl.BaseIntegrationFlowDefinition$ReplyProducerCleaner",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.apache.kafka.streams.errors.LogAndFailExceptionHandler",
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "restTemplateBuilder",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.client.RestTemplateBuilderConfigurer"
        ]
      },
      {
        "name": "restTemplateBuilderConfigurer",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.properties.NotConstructorBoundInjectionFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.integration.jmx.config.JmxIntegrationConfigurationInitializer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.codec.CodecsAutoConfiguration$JacksonCodecConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "jacksonCodecCustomizer",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.ObjectMapper"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.config.ConfigDataLoader",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.integration.IntegrationProperties",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getEndpoint",
        "parameterTypes": [ ]
      },
      {
        "name": "getPoller",
        "parameterTypes": [ ]
      },
      {
        "name": "getManagement",
        "parameterTypes": [ ]
      },
      {
        "name": "getError",
        "parameterTypes": [ ]
      },
      {
        "name": "getRsocket",
        "parameterTypes": [ ]
      },
      {
        "name": "getJdbc",
        "parameterTypes": [ ]
      },
      {
        "name": "getChannel",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Mbeanregistry",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.r2dbc.MultipleConnectionPoolConfigurationsFailureAnalzyer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Chain$Strategy$Fixed",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getPaths",
        "parameterTypes": [ ]
      },
      {
        "name": "setPaths",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "getVersion",
        "parameterTypes": [ ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.web.reactive.DispatcherHandler"
  },
  {
    "name": "com.fasterxml.jackson.databind.ser.std.ClassSerializer",
    "allPublicConstructors": true
  },
  {
    "name": "org.apache.kafka.common.serialization.Serdes$FloatSerde",
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$Pathmatch",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getMatchingStrategy",
        "parameterTypes": [ ]
      },
      {
        "name": "setMatchingStrategy",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$MatchingStrategy"
        ]
      }
    ]
  },
  {
    "name": "org.apache.kafka.common.serialization.Serdes$DoubleSerde",
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.flyway.FlywayDatabaseInitializerDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.function.client.WebClientAutoConfiguration$WebClientCodecsConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "exchangeStrategiesCustomizer",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties$Servlet",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "isProducePartialOutputWhileProcessing",
        "parameterTypes": [ ]
      },
      {
        "name": "getContentType",
        "parameterTypes": [ ]
      },
      {
        "name": "setContentType",
        "parameterTypes": [
          "org.springframework.util.MimeType"
        ]
      },
      {
        "name": "setProducePartialOutputWhileProcessing",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.kafka.core.KafkaAdmin",
    "allDeclaredConstructors": true,
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.BeanCurrentlyInCreationFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.integration.dsl.context.DslIntegrationConfigurationInitializer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.cloud.CloudFoundryVcapEnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.apache.kafka.common.serialization.DoubleSerializer",
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.kafka.core.DefaultKafkaConsumerFactory",
    "allDeclaredConstructors": true,
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.logging.java.JavaLoggingSystem$Factory",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.integration.support.channel.BeanFactoryChannelResolver",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.InvalidConfigurationPropertyValueFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.apache.kafka.clients.admin.NewTopic",
    "allDeclaredConstructors": true,
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.ServerProperties"
        ]
      },
      {
        "name": "errorPageCustomizer",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletPath"
        ]
      },
      {
        "name": "basicErrorController",
        "parameterTypes": [
          "org.springframework.boot.web.servlet.error.ErrorAttributes",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "errorAttributes",
        "parameterTypes": [ ]
      },
      {
        "name": "preserveErrorControllerTargetClassPostProcessor",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.stream.function.FunctionConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "functionInitializer",
        "parameterTypes": [
          "org.springframework.cloud.function.context.FunctionCatalog",
          "org.springframework.cloud.stream.function.StreamFunctionProperties",
          "org.springframework.cloud.stream.config.BindingServiceProperties",
          "org.springframework.context.ConfigurableApplicationContext",
          "org.springframework.cloud.stream.function.StreamBridge"
        ]
      },
      {
        "name": "supplierInitializer",
        "parameterTypes": [
          "org.springframework.cloud.function.context.FunctionCatalog",
          "org.springframework.cloud.stream.function.StreamFunctionProperties",
          "org.springframework.context.support.GenericApplicationContext",
          "org.springframework.cloud.stream.config.BindingServiceProperties",
          "java.util.List",
          "org.springframework.cloud.stream.function.StreamBridge",
          "org.springframework.scheduling.TaskScheduler"
        ]
      },
      {
        "name": "functionBindingRegistrar",
        "parameterTypes": [
          "org.springframework.core.env.Environment",
          "org.springframework.cloud.function.context.FunctionCatalog",
          "org.springframework.cloud.stream.function.StreamFunctionProperties"
        ]
      },
      {
        "name": "po",
        "parameterTypes": [
          "org.springframework.context.support.GenericApplicationContext"
        ]
      },
      {
        "name": "streamBridgeUtils",
        "parameterTypes": [
          "org.springframework.cloud.function.context.FunctionCatalog",
          "org.springframework.cloud.stream.config.BindingServiceProperties",
          "org.springframework.context.ConfigurableApplicationContext",
          "org.springframework.cloud.stream.binding.NewDestinationBindingCallback"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.MutuallyExclusiveConfigurationPropertiesFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "ch.qos.logback.core.rolling.helper.DateTokenConverter",
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "formContentFilter",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.kafka.config.ConcurrentKafkaListenerContainerFactory",
    "allDeclaredConstructors": true,
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.apache.kafka.streams.KafkaStreams",
    "methods": [
      {
        "name": "close",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.apache.kafka.common.serialization.BytesDeserializer",
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.stream.binder.kafka.properties.KafkaExtendedBindingProperties",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getBindings",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.template.TemplateAvailabilityProvider",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.env.PropertiesPropertySourceLoader",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.ApplicationContextFactory",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Servlet",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getContextParameters",
        "parameterTypes": [ ]
      },
      {
        "name": "isRegisterDefaultServlet",
        "parameterTypes": [ ]
      },
      {
        "name": "setContextPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getJsp",
        "parameterTypes": [ ]
      },
      {
        "name": "setApplicationDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRegisterDefaultServlet",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getEncoding",
        "parameterTypes": [ ]
      },
      {
        "name": "getApplicationDisplayName",
        "parameterTypes": [ ]
      },
      {
        "name": "getContextPath",
        "parameterTypes": [ ]
      },
      {
        "name": "getSession",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.function.context.config.ContextFunctionCatalogAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "functionRouter",
        "parameterTypes": [
          "org.springframework.cloud.function.context.FunctionCatalog",
          "org.springframework.cloud.function.context.FunctionProperties",
          "org.springframework.beans.factory.BeanFactory",
          "org.springframework.cloud.function.context.MessageRoutingCallback",
          "org.springframework.cloud.function.context.DefaultMessageRoutingHandler"
        ]
      },
      {
        "name": "functionCatalog",
        "parameterTypes": [
          "java.util.List",
          "org.springframework.cloud.function.json.JsonMapper",
          "org.springframework.context.ConfigurableApplicationContext",
          "org.springframework.cloud.function.core.FunctionInvocationHelper"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.stream.binder.kafka.streams.KStreamBinderConfiguration",
    "allPublicMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "kStreamBinder",
        "parameterTypes": [
          "org.springframework.cloud.stream.binder.kafka.streams.properties.KafkaStreamsBinderConfigurationProperties",
          "org.springframework.cloud.stream.binder.kafka.provisioning.KafkaTopicProvisioner",
          "org.springframework.cloud.stream.binder.kafka.streams.KafkaStreamsMessageConversionDelegate",
          "org.springframework.cloud.stream.binder.kafka.streams.KafkaStreamsBindingInformationCatalogue",
          "org.springframework.cloud.stream.binder.kafka.streams.KeyValueSerdeResolver",
          "org.springframework.cloud.stream.binder.kafka.streams.properties.KafkaStreamsExtendedBindingProperties",
          "org.springframework.cloud.stream.binder.kafka.streams.KafkaStreamsRegistry"
        ]
      },
      {
        "name": "provisioningProvider",
        "parameterTypes": [
          "org.springframework.cloud.stream.binder.kafka.streams.properties.KafkaStreamsBinderConfigurationProperties",
          "org.springframework.boot.autoconfigure.kafka.KafkaProperties",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Remoteip",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setInternalProxies",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getProtocolHeaderHttpsValue",
        "parameterTypes": [ ]
      },
      {
        "name": "getInternalProxies",
        "parameterTypes": [ ]
      },
      {
        "name": "getTrustedProxies",
        "parameterTypes": [ ]
      },
      {
        "name": "getPortHeader",
        "parameterTypes": [ ]
      },
      {
        "name": "getProtocolHeader",
        "parameterTypes": [ ]
      },
      {
        "name": "setTrustedProxies",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPortHeader",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getHostHeader",
        "parameterTypes": [ ]
      },
      {
        "name": "getRemoteIpHeader",
        "parameterTypes": [ ]
      },
      {
        "name": "setProtocolHeaderHttpsValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRemoteIpHeader",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setProtocolHeader",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setHostHeader",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.servlet.server.Encoding",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "isForceRequest",
        "parameterTypes": [ ]
      },
      {
        "name": "setForceResponse",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setForceRequest",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setForce",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setCharset",
        "parameterTypes": [
          "java.nio.charset.Charset"
        ]
      },
      {
        "name": "isForce",
        "parameterTypes": [ ]
      },
      {
        "name": "getMapping",
        "parameterTypes": [ ]
      },
      {
        "name": "isForceResponse",
        "parameterTypes": [ ]
      },
      {
        "name": "setMapping",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "getCharset",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.servlet.server.Session$Cookie",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setComment",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getComment",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "messageConverters",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonProperties",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setConstructorDetector",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.jackson.JacksonProperties$ConstructorDetectorStrategy"
        ]
      },
      {
        "name": "getConstructorDetector",
        "parameterTypes": [ ]
      },
      {
        "name": "getPropertyNamingStrategy",
        "parameterTypes": [ ]
      },
      {
        "name": "getParser",
        "parameterTypes": [ ]
      },
      {
        "name": "setDateFormat",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getDeserialization",
        "parameterTypes": [ ]
      },
      {
        "name": "getSerialization",
        "parameterTypes": [ ]
      },
      {
        "name": "setTimeZone",
        "parameterTypes": [
          "java.util.TimeZone"
        ]
      },
      {
        "name": "setDefaultLeniency",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "getLocale",
        "parameterTypes": [ ]
      },
      {
        "name": "getVisibility",
        "parameterTypes": [ ]
      },
      {
        "name": "getMapper",
        "parameterTypes": [ ]
      },
      {
        "name": "getDateFormat",
        "parameterTypes": [ ]
      },
      {
        "name": "getDefaultPropertyInclusion",
        "parameterTypes": [ ]
      },
      {
        "name": "getTimeZone",
        "parameterTypes": [ ]
      },
      {
        "name": "getGenerator",
        "parameterTypes": [ ]
      },
      {
        "name": "setPropertyNamingStrategy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDefaultPropertyInclusion",
        "parameterTypes": [
          "com.fasterxml.jackson.annotation.JsonInclude$Include"
        ]
      },
      {
        "name": "setLocale",
        "parameterTypes": [
          "java.util.Locale"
        ]
      },
      {
        "name": "getDefaultLeniency",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.kafka.support.serializer.StringOrBytesSerializer",
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "parameterNamesModule",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.stream.binder.kafka.streams.properties.KafkaStreamsExtendedBindingProperties",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getBindings",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "ch.qos.logback.classic.pattern.SyslogStartConverter",
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.context.ApplicationListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$Problemdetails",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext",
          "org.springframework.boot.autoconfigure.web.WebProperties"
        ]
      },
      {
        "name": "conventionErrorViewResolver",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.server.Http2",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jmx.JmxProperties",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setDefaultDomain",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isUniqueNames",
        "parameterTypes": [ ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setUniqueNames",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getDefaultDomain",
        "parameterTypes": [ ]
      },
      {
        "name": "getServer",
        "parameterTypes": [ ]
      },
      {
        "name": "setServer",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getEnabled",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.SpringBootExceptionReporter",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.integration.context.IntegrationProperties",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.info.ProjectInfoProperties$Git",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getEncoding",
        "parameterTypes": [ ]
      },
      {
        "name": "setLocation",
        "parameterTypes": [
          "org.springframework.core.io.Resource"
        ]
      },
      {
        "name": "setEncoding",
        "parameterTypes": [
          "java.nio.charset.Charset"
        ]
      },
      {
        "name": "getLocation",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.logging.LoggingApplicationListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.codec.CodecsAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Listener",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getConcurrency",
        "parameterTypes": [ ]
      },
      {
        "name": "setAsyncAcks",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "getIdleBetweenPolls",
        "parameterTypes": [ ]
      },
      {
        "name": "getIdleEventInterval",
        "parameterTypes": [ ]
      },
      {
        "name": "getClientId",
        "parameterTypes": [ ]
      },
      {
        "name": "setIdleBetweenPolls",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setPollTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setAckCount",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setAckMode",
        "parameterTypes": [
          "org.springframework.kafka.listener.ContainerProperties$AckMode"
        ]
      },
      {
        "name": "setMissingTopicsFatal",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setLogContainerConfig",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setConcurrency",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setIdleEventInterval",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setClientId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMonitorInterval",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "getAckMode",
        "parameterTypes": [ ]
      },
      {
        "name": "setImmediateStop",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getAckCount",
        "parameterTypes": [ ]
      },
      {
        "name": "isImmediateStop",
        "parameterTypes": [ ]
      },
      {
        "name": "getAckTime",
        "parameterTypes": [ ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Listener$Type"
        ]
      },
      {
        "name": "getMonitorInterval",
        "parameterTypes": [ ]
      },
      {
        "name": "setIdlePartitionEventInterval",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "getIdlePartitionEventInterval",
        "parameterTypes": [ ]
      },
      {
        "name": "setAckTime",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setNoPollThreshold",
        "parameterTypes": [
          "java.lang.Float"
        ]
      },
      {
        "name": "getNoPollThreshold",
        "parameterTypes": [ ]
      },
      {
        "name": "isMissingTopicsFatal",
        "parameterTypes": [ ]
      },
      {
        "name": "getType",
        "parameterTypes": [ ]
      },
      {
        "name": "getLogContainerConfig",
        "parameterTypes": [ ]
      },
      {
        "name": "getPollTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "getAsyncAcks",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.stream.binder.kafka.streams.KafkaStreamsJaasConfiguration$$SpringCGLIB$$2",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.apache.kafka.common.serialization.IntegerDeserializer",
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.cloud.stream.binder.kafka.streams.KafkaStreamsJaasConfiguration$$SpringCGLIB$$1",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.web.servlet.context.ServletWebServerApplicationContextFactory",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.stream.binder.kafka.streams.KafkaStreamsJaasConfiguration$$SpringCGLIB$$0",
    "allDeclaredConstructors": true,
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "mappingJackson2HttpMessageConverter",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.ObjectMapper"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.NoSuchMethodFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.stream.binder.kafka.streams.ExtendedBindingHandlerMappingsProviderAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "kafkaStreamsExtendedPropertiesDefaultMappingsProvider",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.integration.IntegrationProperties$Endpoint",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setReadOnlyHeaders",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setThrowExceptionOnLateReply",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setNoAutoStartup",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "isThrowExceptionOnLateReply",
        "parameterTypes": [ ]
      },
      {
        "name": "getNoAutoStartup",
        "parameterTypes": [ ]
      },
      {
        "name": "getReadOnlyHeaders",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.apache.kafka.streams.processor.internals.assignment.FallbackPriorTaskAssignor",
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.kafka.config.AbstractKafkaListenerContainerFactory",
    "allDeclaredConstructors": true,
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.validation.beanvalidation.MethodValidationExcludeFilter",
    "queriedMethods": [
      {
        "name": "byAnnotation",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.sql.init.dependency.DatabaseInitializerDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.config.StandardConfigDataLocationResolver",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.integration.config.IntegrationSimpleEvaluationContextFactoryBean",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.stream.binder.kafka.streams.MultiBinderPropertiesConfiguration$$SpringCGLIB$$2",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.function.context.config.ContextFunctionCatalogAutoConfiguration$JsonMapperConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "jsonMapper",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.stream.binder.kafka.streams.MultiBinderPropertiesConfiguration$$SpringCGLIB$$1",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.stream.binder.kafka.streams.MultiBinderPropertiesConfiguration$$SpringCGLIB$$0",
    "allDeclaredConstructors": true,
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "tomcatWebServerFactoryCustomizer",
        "parameterTypes": [
          "org.springframework.core.env.Environment",
          "org.springframework.boot.autoconfigure.web.ServerProperties"
        ]
      }
    ]
  },
  {
    "name": "org.apache.kafka.common.serialization.Serdes",
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.context.event.EventPublishingRunListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.quartz.SchedulerDependsOnDatabaseInitializationDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.env.EnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.apache.kafka.common.serialization.ListDeserializer",
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.integration.kafka.inbound.KafkaMessageSource",
    "methods": [
      {
        "name": "pause",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "dispatcherServlet",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafTemplateAvailabilityProvider",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.jdbc.SpringJdbcDependsOnDatabaseInitializationDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.apache.kafka.common.serialization.Serdes$VoidSerde",
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Cache",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getPeriod",
        "parameterTypes": [ ]
      },
      {
        "name": "setUseLastModified",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getCachecontrol",
        "parameterTypes": [ ]
      },
      {
        "name": "setPeriod",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "isUseLastModified",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.sql.init.dependency.DependsOnDatabaseInitializationDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Jaas",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setOptions",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "setControlFlag",
        "parameterTypes": [
          "org.springframework.kafka.security.jaas.KafkaJaasLoginModuleInitializer$ControlFlag"
        ]
      },
      {
        "name": "getControlFlag",
        "parameterTypes": [ ]
      },
      {
        "name": "setLoginModule",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getLoginModule",
        "parameterTypes": [ ]
      },
      {
        "name": "getOptions",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.apache.kafka.common.serialization.Serdes$ShortSerde",
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.cloud.function.context.config.ContextFunctionCatalogAutoConfiguration$PlainFunctionScanConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.properties.ConfigurationPropertiesBinder$Factory",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.server.ErrorPageRegistrarBeanPostProcessor",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "com.mehkey.KafkaStreamsTopSellers.KafkaStreamsTopSellersApplication$$SpringCGLIB$$0",
    "allDeclaredConstructors": true,
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.r2dbc.MissingR2dbcPoolDependencyFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "jsonComponentModule",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.yaml.snakeyaml.Yaml",
    "condition": {
      "typeReachable": "org.springframework.boot.env.YamlPropertySourceLoader"
    }
  },
  {
    "name": "org.apache.kafka.common.serialization.BytesSerializer",
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.integration.IntegrationAutoConfiguration$IntegrationManagementConfiguration$EnableIntegrationManagementConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.integration.kafka.inbound.KafkaInboundGateway",
    "methods": [
      {
        "name": "pause",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.integration.config.ConverterRegistrar",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.apache.kafka.clients.consumer.RangeAssignor",
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.cloud.stream.function.StreamFunctionProperties",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "isBatchMode",
        "parameterTypes": [ ]
      },
      {
        "name": "setReactive",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "getReactive",
        "parameterTypes": [ ]
      },
      {
        "name": "getBindings",
        "parameterTypes": [ ]
      },
      {
        "name": "setBindings",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setBatchMode",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.integration.IntegrationAutoConfiguration$IntegrationManagementConfiguration",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "com.mehkey.KafkaStreamsTopSellers.KafkaStreamsTopSellersApplication$$SpringCGLIB$$2",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorConfiguration$ReactorNetty",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "reactorClientResourceFactory",
        "parameterTypes": [ ]
      },
      {
        "name": "reactorClientHttpConnector",
        "parameterTypes": [
          "org.springframework.http.client.reactive.ReactorResourceFactory",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedTomcat",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "tomcatServletWebServerFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "com.mehkey.KafkaStreamsTopSellers.KafkaStreamsTopSellersApplication$$SpringCGLIB$$1",
    "allDeclaredConstructors": true
  },
  {
    "name": "ch.qos.logback.core.rolling.helper.IntegerTokenConverter",
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.reactor.DebugAgentEnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.web.servlet.server.Session",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setStoreDir",
        "parameterTypes": [
          "java.io.File"
        ]
      },
      {
        "name": "getTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "getStoreDir",
        "parameterTypes": [ ]
      },
      {
        "name": "setTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "isPersistent",
        "parameterTypes": [ ]
      },
      {
        "name": "getTrackingModes",
        "parameterTypes": [ ]
      },
      {
        "name": "setPersistent",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getCookie",
        "parameterTypes": [ ]
      },
      {
        "name": "setTrackingModes",
        "parameterTypes": [
          "java.util.Set"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskExecutionProperties",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getPool",
        "parameterTypes": [ ]
      },
      {
        "name": "getShutdown",
        "parameterTypes": [ ]
      },
      {
        "name": "getThreadNamePrefix",
        "parameterTypes": [ ]
      },
      {
        "name": "setThreadNamePrefix",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.InvalidConfigurationPropertyNameFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.kafka.support.LoggingProducerListener",
    "allDeclaredConstructors": true,
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true
  }
]
