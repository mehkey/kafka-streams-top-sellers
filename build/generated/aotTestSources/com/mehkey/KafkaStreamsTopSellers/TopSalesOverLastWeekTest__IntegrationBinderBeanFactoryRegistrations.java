package com.mehkey.KafkaStreamsTopSellers;

import org.springframework.beans.factory.support.DefaultListableBeanFactory;
import org.springframework.boot.context.properties.BoundConfigurationProperties__IntegrationBinderBeanDefinitions;
import org.springframework.boot.context.properties.ConfigurationPropertiesBinder__IntegrationBinderBeanDefinitions;
import org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor__IntegrationBinderBeanDefinitions;
import org.springframework.boot.validation.beanvalidation.MethodValidationExcludeFilter__IntegrationBinderBeanDefinitions;
import org.springframework.cloud.stream.binder.test.TestChannelBinderConfiguration__IntegrationBinderBeanDefinitions;
import org.springframework.cloud.stream.config.BinderFactoryAutoConfiguration__IntegrationBinderBeanDefinitions;
import org.springframework.cloud.stream.config.ContentTypeConfiguration__IntegrationBinderBeanDefinitions;
import org.springframework.context.event.DefaultEventListenerFactory__IntegrationBinderBeanDefinitions;
import org.springframework.context.event.EventListenerMethodProcessor__IntegrationBinderBeanDefinitions;
import org.springframework.expression.spel.support.SimpleEvaluationContext__IntegrationBinderBeanDefinitions;
import org.springframework.expression.spel.support.StandardEvaluationContext__IntegrationBinderBeanDefinitions;
import org.springframework.integration.channel.MessagePublishingErrorHandler__IntegrationBinderBeanDefinitions;
import org.springframework.integration.config.ConverterRegistrar__IntegrationBinderBeanDefinitions;
import org.springframework.integration.config.CustomConversionServiceFactoryBean__IntegrationBinderBeanDefinitions;
import org.springframework.integration.config.GlobalChannelInterceptorProcessor__IntegrationBinderBeanDefinitions;
import org.springframework.integration.config.IdGeneratorConfigurer__IntegrationBinderBeanDefinitions;
import org.springframework.integration.config.MessagingAnnotationPostProcessor__IntegrationBinderBeanDefinitions;
import org.springframework.integration.dsl.BaseIntegrationFlowDefinition__IntegrationBinderBeanDefinitions;
import org.springframework.integration.dsl.context.IntegrationFlowBeanPostProcessor__IntegrationBinderBeanDefinitions;
import org.springframework.integration.dsl.context.StandardIntegrationFlowContext__IntegrationBinderBeanDefinitions;
import org.springframework.integration.support.channel.BeanFactoryChannelResolver__IntegrationBinderBeanDefinitions;

/**
 * Register bean definitions for the bean factory.
 */
public class TopSalesOverLastWeekTest__IntegrationBinderBeanFactoryRegistrations {
  /**
   * Register the bean definitions.
   */
  public void registerBeanDefinitions(DefaultListableBeanFactory beanFactory) {
    beanFactory.registerBeanDefinition("org.springframework.context.event.internalEventListenerProcessor", EventListenerMethodProcessor__IntegrationBinderBeanDefinitions.getInternalEventListenerProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.context.event.internalEventListenerFactory", DefaultEventListenerFactory__IntegrationBinderBeanDefinitions.getInternalEventListenerFactoryBeanDefinition());
    beanFactory.registerBeanDefinition("testChannelBinderConfiguration", TestChannelBinderConfiguration__IntegrationBinderBeanDefinitions.getTestChannelBinderConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.cloud.stream.config.ContentTypeConfiguration", ContentTypeConfiguration__IntegrationBinderBeanDefinitions.getContentTypeConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("integrationArgumentResolverMessageConverter", ContentTypeConfiguration__IntegrationBinderBeanDefinitions.getIntegrationArgumentResolverMessageConverterBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.cloud.stream.config.BinderFactoryAutoConfiguration", BinderFactoryAutoConfiguration__IntegrationBinderBeanDefinitions.getBinderFactoryAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("integrationMessageHandlerMethodFactory", BinderFactoryAutoConfiguration__IntegrationBinderBeanDefinitions.getIntegrationMessageHandlerMethodFactoryBeanDefinition());
    beanFactory.registerBeanDefinition("binderTypeRegistry", BinderFactoryAutoConfiguration__IntegrationBinderBeanDefinitions.getBinderTypeRegistryBeanDefinition());
    beanFactory.registerBeanDefinition("messageConverterConfigurer", BinderFactoryAutoConfiguration__IntegrationBinderBeanDefinitions.getMessageConverterConfigurerBeanDefinition());
    beanFactory.registerBeanDefinition("channelFactory", BinderFactoryAutoConfiguration__IntegrationBinderBeanDefinitions.getChannelFactoryBeanDefinition());
    beanFactory.registerBeanDefinition("fluxMessageChannelBindingTargetFactory", BinderFactoryAutoConfiguration__IntegrationBinderBeanDefinitions.getFluxMessageChannelBindingTargetFactoryBeanDefinition());
    beanFactory.registerBeanDefinition("messageSourceFactory", BinderFactoryAutoConfiguration__IntegrationBinderBeanDefinitions.getMessageSourceFactoryBeanDefinition());
    beanFactory.registerBeanDefinition("compositeMessageChannelConfigurer", BinderFactoryAutoConfiguration__IntegrationBinderBeanDefinitions.getCompositeMessageChannelConfigurerBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor", ConfigurationPropertiesBindingPostProcessor__IntegrationBinderBeanDefinitions.getConfigurationPropertiesBindingPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.context.internalConfigurationPropertiesBinderFactory", ConfigurationPropertiesBinder__IntegrationBinderBeanDefinitions.Factory__BeanDefinitions.getInternalConfigurationPropertiesBinderFactoryBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.context.internalConfigurationPropertiesBinder", ConfigurationPropertiesBinder__IntegrationBinderBeanDefinitions.getInternalConfigurationPropertiesBinderBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.context.properties.BoundConfigurationProperties", BoundConfigurationProperties__IntegrationBinderBeanDefinitions.getBoundConfigurationPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar.methodValidationExcludeFilter", MethodValidationExcludeFilter__IntegrationBinderBeanDefinitions.getMethodValidationExcludeFilterBeanDefinition());
    beanFactory.registerBeanDefinition("sourceDestination", TestChannelBinderConfiguration__IntegrationBinderBeanDefinitions.getSourceDestinationBeanDefinition());
    beanFactory.registerBeanDefinition("targetDestination", TestChannelBinderConfiguration__IntegrationBinderBeanDefinitions.getTargetDestinationBeanDefinition());
    beanFactory.registerBeanDefinition("springIntegrationChannelBinder", TestChannelBinderConfiguration__IntegrationBinderBeanDefinitions.getSpringIntegrationChannelBinderBeanDefinition());
    beanFactory.registerBeanDefinition("springIntegrationProvisioner", TestChannelBinderConfiguration__IntegrationBinderBeanDefinitions.getSpringIntegrationProvisionerBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.integration.internalMessagingAnnotationPostProcessor", MessagingAnnotationPostProcessor__IntegrationBinderBeanDefinitions.getInternalMessagingAnnotationPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("integrationChannelResolver", BeanFactoryChannelResolver__IntegrationBinderBeanDefinitions.getIntegrationChannelResolverBeanDefinition());
    beanFactory.registerBeanDefinition("integrationMessagePublishingErrorHandler", MessagePublishingErrorHandler__IntegrationBinderBeanDefinitions.getIntegrationMessagePublishingErrorHandlerBeanDefinition());
    beanFactory.registerBeanDefinition("integrationEvaluationContext", StandardEvaluationContext__IntegrationBinderBeanDefinitions.getIntegrationEvaluationContextBeanDefinition());
    beanFactory.registerBeanDefinition("integrationSimpleEvaluationContext", SimpleEvaluationContext__IntegrationBinderBeanDefinitions.getIntegrationSimpleEvaluationContextBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.integration.config.IdGeneratorConfigurer#0", IdGeneratorConfigurer__IntegrationBinderBeanDefinitions.getIdGeneratorConfigurerBeanDefinition());
    beanFactory.registerBeanDefinition("globalChannelInterceptorProcessor", GlobalChannelInterceptorProcessor__IntegrationBinderBeanDefinitions.getGlobalChannelInterceptorProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("converterRegistrar", ConverterRegistrar__IntegrationBinderBeanDefinitions.getConverterRegistrarBeanDefinition());
    beanFactory.registerBeanDefinition("integrationConversionService", CustomConversionServiceFactoryBean__IntegrationBinderBeanDefinitions.getIntegrationConversionServiceBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.integration.dsl.context.IntegrationFlowBeanPostProcessor", IntegrationFlowBeanPostProcessor__IntegrationBinderBeanDefinitions.getIntegrationFlowBeanPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.integration.dsl.context.IntegrationFlowContext", StandardIntegrationFlowContext__IntegrationBinderBeanDefinitions.getIntegrationFlowContextBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.integration.dsl.BaseIntegrationFlowDefinition$ReplyProducerCleaner", BaseIntegrationFlowDefinition__IntegrationBinderBeanDefinitions.ReplyProducerCleaner__BeanDefinitions.getReplyProducerCleanerBeanDefinition());
  }

  /**
   * Register the aliases.
   */
  public void registerAliases(DefaultListableBeanFactory beanFactory) {
  }
}
